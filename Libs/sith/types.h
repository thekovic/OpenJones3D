#ifndef SITH_TYPES_H
#define SITH_TYPES_H
#include <stdint.h>
#include <j3dcore/j3d.h>
#include <rdroid/types.h>
#include <sound/types.h>
#include <std/types.h>

J3D_EXTERN_C_START

#define SITHTHING_NUMADJECTIVES 77u

#define SITH_PUPPET_NUMMOVEMODES  3u
#define SITH_PUPPET_NUMARMEDMODES 8u
#define SITH_PUPPET_NUMSUBMODES   84u

#define SITHMESSAGE_NUMTYPES             65u
#define SITHMESSAGE_SENDTOJOINEDPLAYERS ((DPID)-1)

#define SITHCOGSCRIPT_MAXSYMREFS  256u

#define SITHCOGEXEC_CALLSTACKSIZE 4u
#define SITHCOGEXEC_STACKSIZE     256u

#define SITHAI_MAXWPNTOWNERS          10u
#define SITHAI_MAXINSTINCTS           16u
#define SITHAI_MAXREGISTEREDINSTINCTS 32u
#define SITHAI_MAXWPNTS               60u

#define SITH_STATICRESOURCE_INDEXMASK 0x8000

#define SITHGAMESAVE_NONE    0x0
#define SITHGAMESAVE_SAVE    0x1
#define SITHGAMESAVE_RESTORE 0x2

#define SITHINVENTORY_MAXTYPES 200u

#define SITHSOUNDCLASS_MAXMODES 141u

typedef enum eSithThingType
{
    SITH_THING_FREE      = 0,
    SITH_THING_CAMERA    = 1,
    SITH_THING_ACTOR     = 2,
    SITH_THING_WEAPON    = 3,
    SITH_THING_DEBRIS    = 4,
    SITH_THING_ITEM      = 5,
    SITH_THING_EXPLOSION = 6,
    SITH_THING_COG       = 7,
    SITH_THING_GHOST     = 8,
    SITH_THING_CORPSE    = 9,
    SITH_THING_PLAYER    = 10,
    SITH_THING_PARTICLE  = 11,
    SITH_THING_HINT      = 12,
    SITH_THING_SPRITE    = 13,
    SITH_THING_POLYLINE  = 14,
    SITH_THING_NUMTYPES  = 15,
} SithThingType;

typedef enum eSithThingFlag
{
    SITH_TF_EMITLIGHT       = 0x1,
    SITH_TF_DESTROYED       = 0x2,
    SITH_TF_NOWEAPONCOLLIDE = 0x4,
    SITH_TF_WHIPCLIMB       = 0x8,
    SITH_TF_INVISIBLE       = 0x10,
    SITH_TF_UNKNOWN_20      = 0x20,
    SITH_TF_STANDON         = 0x40,
    SITH_TF_MOUNTABLE       = 0x80,
    SITH_TF_REMOTE          = 0x100,
    SITH_TF_DYING           = 0x200,
    SITH_TF_COGLINKED       = 0x400,
    SITH_TF_NOCRUSH         = 0x800,
    SITH_TF_UNKNOWN_1000    = 0x1000,
    SITH_TF_WOOD            = 0x2000,
    SITH_TF_SHADOW          = 0x4000,
    SITH_TF_JEEPSTOP        = 0x8000,
    SITH_TF_SNOW            = 0x10000,
    SITH_TF_PULSESET        = 0x20000,
    SITH_TF_TIMERSET        = 0x40000,
    SITH_TF_DISABLED        = 0x80000,
    SITH_TF_SEEN            = 0x100000,
    SITH_TF_UNKNOWN_200000  = 0x200000,
    SITH_TF_METAL           = 0x400000,
    SITH_TF_EARTH           = 0x800000,
    SITH_TF_NOSOUND         = 0x1000000,
    SITH_TF_SUBMERGED       = 0x2000000,
    SITH_TF_CLIMBCRATE      = 0x4000000,
    SITH_TF_WATERDESTROYED  = 0x8000000,
    SITH_TF_AIRDESTROYED    = 0x10000000,
    SITH_TF_SPLASH          = 0x20000000,
    SITH_TF_MOVABLE         = 0x40000000,
    SITH_TF_WHIPSWING       = 0x80000000,
} SithThingFlag;

typedef enum eSithThingMoveType
{
    SITH_MT_NONE    = 0,
    SITH_MT_PHYSICS = 1,
    SITH_MT_PATH    = 2,
} SithThingMoveType;

// Thing sync flags
typedef enum eSithThingSyncFlags
{
    SITHTHING_SYNC_POS     = 0x01, // Current position & orientation + physics properties
    SITHTHING_SYNC_STATE   = 0x02,
    SITHTHING_SYNC_FULL    = 0x04,
    SITHTHING_SYNC_MOVEPOS = 0x08, // Current position & orientation + move status
} SithThingSyncFlags;

typedef enum eSithSectorFlag
{
    SITH_SECTOR_NOGRAVITY     = 0x1,
    SITH_SECTOR_UNDERWATER    = 0x2,
    SITH_SECTOR_COGLINKED     = 0x4,
    SITH_SECTOR_USETHRUST     = 0x8,
    SITH_SECTOR_HIDEONMAP     = 0x10,
    SITH_SECTOR_NOACTORENTER  = 0x20,
    SITH_SECTOR_FALLDEATH     = 0x40,
    SITH_SECTOR_ADJOINSOFF    = 0x80,
    SITH_SECTOR_AETHERIUM     = 0x100,
    SITH_SECTOR_HASCOLLIDEBOX = 0x1000,
    SITH_SECTOR_SEEN          = 0x4000,
    SITH_SECTOR_SYNC          = 0x8000,
} SithSectorFlag;

typedef enum eSithCogValueType
{
    SITHCOG_VALUE_POINTER  = 0,
    SITHCOG_VALUE_SYMBOLID = 1,
    SITHCOG_VALUE_FLOAT    = 2,
    SITHCOG_VALUE_INT      = 3,
    SITHCOG_VALUE_STRING   = 4,
    SITHCOG_VALUE_VECTOR   = 5,
} SithCogValueType;

typedef enum eSithCogMsgType
{
    SITHCOG_MSG_ACTIVATE    = 1,
    SITHCOG_MSG_REMOVED     = 2,
    SITHCOG_MSG_STARTUP     = 3,
    SITHCOG_MSG_TIMER       = 4,
    SITHCOG_MSG_BLOCKED     = 5,
    SITHCOG_MSG_ENTERED     = 6,
    SITHCOG_MSG_EXITED      = 7,
    SITHCOG_MSG_CROSSED     = 8,
    SITHCOG_MSG_SIGHTED     = 9,
    SITHCOG_MSG_DAMAGED     = 10,
    SITHCOG_MSG_ARRIVED     = 11,
    SITHCOG_MSG_KILLED      = 12,
    SITHCOG_MSG_PULSE       = 13,
    SITHCOG_MSG_TOUCHED     = 14,
    SITHCOG_MSG_CREATED     = 15,
    SITHCOG_MSG_LOADING     = 16,
    SITHCOG_MSG_SELECTED    = 17,
    SITHCOG_MSG_DESELECTED  = 18,
    SITHCOG_MSG_AIM         = 19,
    SITHCOG_MSG_CHANGED     = 20,
    SITHCOG_MSG_DEACTIVATED = 21,
    SITHCOG_MSG_SHUTDOWN    = 22,
    SITHCOG_MSG_RESPAWN     = 23,
    SITHCOG_MSG_AIEVENT     = 24,
    SITHCOG_MSG_CALLBACK    = 25,
    SITHCOG_MSG_TAKEN       = 26,
    SITHCOG_MSG_USER0       = 27,
    SITHCOG_MSG_USER1       = 28,
    SITHCOG_MSG_USER2       = 29,
    SITHCOG_MSG_USER3       = 30,
    SITHCOG_MSG_USER4       = 31,
    SITHCOG_MSG_USER5       = 32,
    SITHCOG_MSG_USER6       = 33,
    SITHCOG_MSG_USER7       = 34,
    SITHCOG_MSG_NEWPLAYER   = 35,
    SITHCOG_MSG_FIRE        = 36,
    SITHCOG_MSG_JOIN        = 37,
    SITHCOG_MSG_LEAVE       = 38,
    SITHCOG_MSG_SPLASH      = 39,
    SITHCOG_MSG_TRIGGER     = 40,
    SITHCOG_MSG_STATECHANGE = 41,
    SITHCOG_MSG_MISSED      = 42,
    SITHCOG_MSG_BOARDED     = 43,
    SITHCOG_MSG_UNBOARDED   = 44,
    SITHCOG_MSG_ARRIVEDWPNT = 45,
    SITHCOG_MSG_INITIALIZED = 46,
    SITHCOG_MSG_UPDATEWPNTS = 47,
} SithCogMsgType;

typedef enum eSithCogFlag
{
    SITHCOG_DEBUG     = 0x1,
    SITHCOG_DISABLED  = 0x2,
    SITHCOG_PULSE_SET = 0x4,
    SITHCOG_TIMER_SET = 0x8,
    SITHCOG_PAUSED    = 0x10,
    SITHCOG_CLASS     = 0x20,
    SITHCOG_LOCAL     = 0x40,
    SITHCOG_SERVER    = 0x80,
    SITHCOG_GLOBAL    = 0x100,
    SITHCOG_NOSYNC    = 0x200,
} SithCogFlag;

typedef enum eSithSurfaceAdjoinFlag
{
    SITH_ADJOIN_VISIBLE                        = 0x1,
    SITH_ADJOIN_MOVE                           = 0x2,
    SITH_ADJOIN_RESERVED_JKDF_ALLOW_SOUND_PASS = 0x4,
    SITH_ADJOIN_NOAIMOVE                       = 0x8,
    SITH_ADJOIN_NOPLAYERMOVE                   = 0x10,
    SITH_ADJOIN_SECTORSET                      = 0x20,
    SITH_ADJOIN_UNKNOWN_80                     = 0x80,
} SithSurfaceAdjoinFlag;

typedef enum eSithSurfaceFlag
{
    SITH_SURFACE_ISFLOOR       = 0x1,
    SITH_SURFACE_COGLINKED     = 0x2,
    SITH_SURFACE_COLLISION     = 0x4,
    SITH_SURFACE_NOAIMOVE      = 0x8,
    SITH_SURFACE_DOUBLESIZE    = 0x10,
    SITH_SURFACE_HALFSIZE      = 0x20,
    SITH_SURFACE_EIGHTSIZE     = 0x40,
    SITH_SURFACE_AETHERIUM     = 0x80,
    SITH_SURFACE_HORIZONSKY    = 0x200,
    SITH_SURFACE_CEILINGSKY    = 0x400,
    SITH_SURFACE_SCROLLING     = 0x800,
    SITH_SURFACE_KILLFLOOR     = 0x1000,
    SITH_SURFACE_CLIMBABLE     = 0x2000,
    SITH_SURFACE_TRACK         = 0x4000,
    SITH_SURFACE_SYNC          = 0x8000,
    SITH_SURFACE_METAL         = 0x10000,
    SITH_SURFACE_WATER         = 0x20000,
    SITH_SURFACE_SHALLOWWATER  = 0x40000,
    SITH_SURFACE_EARTH         = 0x80000,
    SITH_SURFACE_WEB           = 0x100000,
    SITH_SURFACE_LAVA          = 0x200000,
    SITH_SURFACE_SNOW          = 0x400000,
    SITH_SURFACE_WOOD          = 0x800000,
    SITH_SURFACE_LEDGE         = 0x1000000,
    SITH_SURFACE_WATERLEDGE    = 0x2000000,
    SITH_SURFACE_QUARTERSIZE   = 0x4000000,
    SITH_SURFACE_QUADRUPLESIZE = 0x8000000,
    SITH_SURFACE_WHIPAIM       = 0x10000000,
    SITH_SURFACE_ECHO          = 0x20000000,
    SITH_SURFACE_WOODECHO      = 0x40000000,
    SITH_SURFACE_EARTHECHO     = 0x80000000,
} SithSurfaceFlag;

typedef enum eSithCollisionType
{
    SITHCOLLISION_THING       = 0x1,
    SITHCOLLISION_WORLD       = 0x2,
    SITHCOLLISION_FACE        = 0x4,
    SITHCOLLISION_FACEEDGE    = 0x8,
    SITHCOLLISION_FACEVERTEX  = 0x10,
    SITHCOLLISION_ADJOINTOUCH = 0x20,
    SITHCOLLISION_ADJOINCROSS = 0x40,
} SithCollisionType;

typedef enum eSithCollideType
{
    SITH_COLLIDE_NONE     = 0,
    SITH_COLLIDE_SPHERE   = 1,
    SITH_COLLIDE_FACE     = 3,
    SITH_COLLIDE_NUMTYPES = 4,
} SithCollideType;

typedef enum eSithAnimateFlags
{
    SITHANIMATE_LOOP                 = 0x01,
    SITHANIMATE_START_SECOND_FRAME   = 0x02,
    SITHANIMATE_START_THIRD_FRAME    = 0x04,
    SITHANIMATE_FINISH_FIRST_FRAME   = 0x08,
    SITHANIMATE_PUSHITEM             = 0x10,
    SITHANIMATE_PULLITEM             = 0x20,
    SITHANIMATE_MATERIAL             = 0x10000,
    SITHANIMATE_SURFACE              = 0x20000,
    SITHANIMATE_THING                = 0x40000,
    SITHANIMATE_SPRITE               = 0x80000,
    SITHANIMATE_SCROLL               = 0x100000,
    SITHANIMATE_PAGEFLIP             = 0x200000,
    SITHANIMATE_LIGHT                = 0x400000,
    SITHANIMATE_SKYHORIZON           = 0x800000,
    SITHANIMATE_SKYCEILING           = 0x1000000,
    SITHANIMATE_SECTOR               = 0x2000000,
    SITHANIMATE_CAMERA_ZOOM          = 0x4000000,
    SITHANIMATE_THING_FADE           = 0x8000000,
    SITHANIMATE_SPRITE_SIZE          = 0x10000000,
    SITHANIMATE_THING_MOVE           = 0x20000000,
    SITHANIMATE_THING_MOVEPOS        = 0x40000000,
    SITHANIMATE_THING_QUICKTURN      = 0x80000000,
} SithAnimateFlags;

typedef enum eSithControlType
{
    SITH_CT_PLOT      = 0,
    SITH_CT_PLAYER    = 1,
    SITH_CT_AI        = 2,
    SITH_CT_EXPLOSION = 6,
    SITH_CT_PARTICLE  = 7,
} SithControlType;

typedef enum eSithDebugModeFlag
{
    SITHDEBUG_AIEVENTS_DISABLED          = 0x01,
    SITHDEBUG_PUPPETSYSTEM_DISABLED      = 0x02,
    SITHDEBUG_UNKNOWN_8                  = 0x08,
    SITHDEBUG_TRACKSHOTS                 = 0x40,
    SITHDEBUG_AIDISABLED                 = 0x80,
    SITHDEBUG_INEDITOR                   = 0x100,
    SITHDEBUG_AINOTARGET                 = 0x200,
    SITHDEBUG_SLOWMODE                   = 0x400,
} SithDebugModeFlag;

typedef enum eSithMapModeFlags
{
    SITHMAPMODE_SHOWALLSECTORS = 0x02,
    SITHMAPMODE_SHOWPLAYERS    = 0x04,
    SITHMAPMODE_SHOWACTORS     = 0x08,
    SITHMAPMODE_SHOWITEMS      = 0x10,
    SITHMAPMODE_SHOWWEAPONS    = 0x20,
    SITHMAPMODE_SHOWALLTHINGS  = 0x40,
} SithMapModeFlags;

typedef enum eSithWorldState
{
    SITH_WORLD_STATE_STATIC      = 0x01,
    SITH_WORLD_STATE_INITIALIZED = 0x02,
    SITH_WORLD_STATE_UPDATE_FOG  = 0x04,
    SITH_WORLD_STATE_INIT_HUD    = 0x08,
} SithWorldState;

typedef enum eSithPathMoveMode
{
    SITH_PATHMOVE_MOVE         = 0x01,
    SITH_PATHMOVE_ROTATE       = 0x02,
    SITH_PATHMOVE_FOLLOWPATH   = 0x04,
    SITH_PATHMOVE_ROTATE_PIVOT = 0x10,
    SITH_PATHMOVE_PAUSED       = 0x80,
} SithPathMoveMode;

typedef enum eSithPhysicsFlags
{
    SITH_PF_USEGRAVITY          = 0x01,
    SITH_PF_USETHRUST           = 0x02,
    SITH_PF_UNKNOWN_4           = 0x04,
    SITH_PF_UNKNOWN_8           = 0x08,
    SITH_PF_ALIGNSURFACE        = 0x10,
    SITH_PF_SURFACEBOUNCE       = 0x20,
    SITH_PF_FLOORSTICK          = 0x40,
    SITH_PF_WALLSTICK           = 0x80,
    SITH_PF_ALIGNED             = 0x100,
    SITH_PF_USEROTATIONVELOCITY = 0x200,
    SITH_PF_BANKEDTURN          = 0x400,
    SITH_PF_ALIGNUP             = 0x800,
    SITH_PF_USEANGULARTHRUST    = 0x1000,
    SITH_PF_FLY                 = 0x2000,
    SITH_PF_USEBLASTFORCE       = 0x4000,
    SITH_PF_UNKNOWN_8000        = 0x8000,
    SITH_PF_CROUCHING           = 0x10000,
    SITH_PF_STARTORIENTMOVE     = 0x20000,
    SITH_PF_PARTIALGRAVITY      = 0x40000,
    SITH_PF_UNKNOWN_80000       = 0x80000,
    SITH_PF_ONWATERSURFACE      = 0x100000,
    SITH_PF_UNKNOWN_200000      = 0x200000,
    SITH_PF_NOTHRUST            = 0x400000,
    SITH_PF_NOUPDATE            = 0x800000,
    SITH_PF_MINECAR             = 0x1000000,
    SITH_PF_RAFT                = 0x2000000,
    SITH_PF_JEEP                = 0x4000000,
    SITH_PF_UNKNOWN_8000000     = 0x8000000,
    SITH_PF_UNKNOWN_10000000    = 0x10000000,
    SITH_PF_UNKNOWN_20000000    = 0x20000000,
    SITH_PF_UNKNOWN_40000000    = 0x40000000,
    SITH_PF_UNKNOWN_80000000    = 0x80000000,
} SithPhysicsFlags;

typedef enum eSithAIMode
{
    SITHAI_MODE_MOVING            = 0x01,
    SITHAI_MODE_ATTACKING         = 0x02,
    SITHAI_MODE_SEARCHING         = 0x04,
    SITHAI_MODE_TURNING           = 0x08,
    SITHAI_MODE_UNKNOWN_10        = 0x10,
    SITHAI_MODE_TOUGHSKIN         = 0x20,
    SITHAI_MODE_NOCHECKFORCLIFF   = 0x40,
    SITHAI_MODE_UNKNOWN_80        = 0x80,
    SITHAI_MODE_BLOCK             = 0x100,
    SITHAI_MODE_ACTIVE            = 0x200,
    SITHAI_MODE_TARGETVISIBLE     = 0x400,
    SITHAI_MODE_FLEEING           = 0x800,
    SITHAI_MODE_SLEEPING          = 0x1000,
    SITHAI_MODE_DISABLED          = 0x2000,
    SITHAI_MODE_CIRCLESTRAFING    = 0x4000,
    SITHAI_MODE_UNKNOWN_8000      = 0x8000,
    SITHAI_MODE_WANTALLEVENTS     = 0x10000,
    SITHAI_MODE_LOSTSIGHTOFGOAL   = 0x20000,
    SITHAI_MODE_INSTINCTUSEWPNTS  = 0x40000,
    SITHAI_MODE_CHASE_GOAL        = 0x80000,
    SITHAI_MODE_UNKNOWN_100000    = 0x100000,
    SITHAI_MODE_WALLCRAWLING      = 0x200000,
    SITHAI_MODE_UNKNOWN_400000    = 0x400000,
    SITHAI_MODE_HUNTING           = 0x800000,
    SITHAI_MODE_UNKNOWN_1000000   = 0x1000000,
    SITHAI_MODE_NOCHASING         = 0x2000000,
    SITHAI_MODE_TRAVERSEWPNTS     = 0x4000000,
    SITHAI_MODE_ARMOREDSKIN       = 0x8000000,
    SITHAI_MODE_FLEEINGTOWAYPOINT = 0x10000000,
} SithAIMode;

typedef enum eSithAISubMode
{
    SITHAI_SUBMODE_UNKNOWN_1                = 0x01,
    SITHAI_SUBMODE_UNKNOWN_2                = 0x02,
    SITHAI_SUBMODE_UNKNOWN_4                = 0x04,
    SITHAI_SUBMODE_UNKNOWN_8                = 0x08,
    SITHAI_SUBMODE_UNKNOWN_10               = 0x10,
    SITHAI_SUBMODE_SKIPCHECKFIREFOV         = 0x20,
    SITHAI_SUBMODE_FIREADDEYEOFFSET         = 0x40,
    SITHAI_SUBMODE_NOMOVEBACKWARDS          = 0x80,
    SITHAI_SUBMODE_UNKNOWN_100              = 0x100,
    SITHAI_SUBMODE_CONTINUOUSMOTION         = 0x200,
    SITHAI_SUBMODE_UNKNOWN_400              = 0x400,
    SITHAI_SUBMODE_UNKNOWN_800              = 0x800,
    SITHAI_SUBMODE_HEADTRACKINGMOTION       = 0x1000,
    SITHAI_SUBMODE_BODYTRACKINGMOTION       = 0x2000,
    SITHAI_SUBMODE_UNKNOWN_4000             = 0x4000,
    SITHAI_SUBMODE_CONTINUOUSWPNTMOTION     = 0x8000,
    SITHAI_SUBMODE_SEMICONTINUOUSWPNTMOTION = 0x10000,
    SITHAI_SUBMODE_SEMICONTINUOUSMOTION     = 0x20000,
    SITHAI_SUBMODE_QUICKMODEFADE            = 0x40000,
    SITHAI_SUBMODE_SLOWMODEFADE             = 0x80000,
    SITHAI_SUBMODE_USEMATCHVELOCITY         = 0x100000,
    SITHAI_SUBMODE_SWIMNEARSURFACE          = 0x200000,
    SITHAI_SUBMODE_UNKNOWN_400000           = 0x400000,
    SITHAI_SUBMODE_ALLOWSTEPTHING           = 0x800000,
    SITHAI_SUBMODE_SPECIALTURNS             = 0x1000000,
    SITHAI_SUBMODE_UNKNOWN_2000000          = 0x2000000,
    SITHAI_SUBMODE_WALLCRAWLLOCKED          = 0x8000000,
} SithAISubMode;

typedef enum eSithAttachFlag
{
    SITH_ATTACH_SURFACE        = 0x01,
    SITH_ATTACH_THINGFACE      = 0x02,
    SITH_ATTACH_THING          = 0x04,
    SITH_ATTACH_NOMOVE         = 0x08,
    SITH_ATTACH_CLIMBSURFACE   = 0x10,
    SITH_ATTACH_THINGCLIMBWHIP = 0x20,
    SITH_ATTACH_TAIL           = 0x40,
} SithAttachFlag;

typedef enum eSithInventoryTypeFlag
{
    SITHINVENTORY_TYPE_REGISTERED                 = 0x01,
    SITHINVENTORY_TYPE_ITEM                       = 0x02,
    SITHINVENTORY_TYPE_WEAPON                     = 0x04,
    SITHINVENTORY_TYPE_AUTOAIM                    = 0x08,
    SITHINVENTORY_TYPE_DAMAGEABLE                 = 0x10,
    SITHINVENTORY_TYPE_DEFAULT                    = 0x20,
    SITHINVENTORY_TYPE_NOT_CARRIED_BETWEEN_LEVELS = 0x40,
    SITHINVENTORY_TYPE_BACKPACKITEM               = 0x80,
    SITHINVENTORY_TYPE_UNKNOWN_200                = 0x200,
    SITHINVENTORY_TYPE_PLAYERWEAPON               = 0x400,
} SithInventoryTypeFlag;

typedef enum eSithDamageType
{
    SITH_DAMAGE_IMPACT      = 0x1,
    SITH_DAMAGE_ENERGY      = 0x2,
    SITH_DAMAGE_FIRE        = 0x4,
    SITH_DAMAGE_FISTS       = 0x8,
    SITH_DAMAGE_WHIP        = 0x10,
    SITH_DAMAGE_MACHETE     = 0x20,
    SITH_DAMAGE_DROWN       = 0x40,
    SITH_DAMAGE_CRUSH       = 0x80,
    SITH_DAMAGE_POISON      = 0x100,
    SITH_DAMAGE_LAVA        = 0x200,
    SITH_DAMAGE_400         = 0x400,
    SITH_DAMAGE_ELECTROWHIP = 0x800,
    SITH_DAMAGE_IMP1        = 0x1000,
    SITH_DAMAGE_2000        = 0x2000,
    SITH_DAMAGE_IMP4        = 0x4000,
    SITH_DAMAGE_IMP5        = 0x5000,
    SITH_DAMAGE_LIGHTNING   = 0x100000,
    SITH_DAMAGE_LASER       = 0x200000,
    SITH_DAMAGE_RAZOR_ROCK  = 0x400000,
    SITH_DAMAGE_RAFT_LEAK   = 0x800000,
    SITH_DAMAGE_SCRAPE      = 0x1000000,
    SITH_DAMAGE_VEHICLE     = 0x2000000,
    SITH_DAMAGE_BONK        = 0x4000000,
    SITH_DAMAGE_DEBRIS      = 0x8000000,
    SITH_DAMAGE_IMP_BLAST   = 0x10000000,
    SITH_DAMAGE_HIT         = 0x20000000,
    SITH_DAMAGE_COLD_WATER  = 0x40000000,
    SITH_DAMAGE_DART        = 0x80000000,
} SithDamageType;

typedef enum eSithExplosionFlag
{
    SITH_EF_ANIMATESPRITE         = 0x1,
    SITH_EF_BLASTPHASE            = 0x2,
    SITH_EF_BLASTDAMAGE           = 0x4,
    SITH_EF_CHILDEXPLOSION        = 0x8,
    SITH_EF_VARIABLELIGHT         = 0x10,
    SITH_EF_RANDOMROLL            = 0x20,
    SITH_EF_NOSHOOTERDAMAGE       = 0x40,
    SITH_EF_RANDOMDEBRIS          = 0x80,
    SITH_EF_BLINDPLAYER           = 0x100,
    SITH_EF_ANIMATEDEBRISMATERIAL = 0x200,
    SITH_EF_UPDATEDEBRISMATERIAL  = 0x400,
    SITH_EF_EXPAND                = 0x800,
    SITH_EF_FADE                  = 0x1000,
} SithExplosionFlag;

typedef enum eSithActorFlag J3D_ENUM_TYPE(uint32_t)
{
    SITH_AF_CANROTATEHEAD       = 0x1,
        SITH_AF_VIEWCENTRING        = 0x2,
        SITH_AF_HEADLIGHT           = 0x4,
        SITH_AF_INVULNERABLE        = 0x8,
        SITH_AF_VIEWCENTRED         = 0x10,
        SITH_AF_EXPLODE_WHEN_KILLED = 0x20,
        SITH_AF_BREATHEUNDERWATER   = 0x40,
        SITH_AF_INVISIBLE           = 0x80,
        SITH_AF_DROID               = 0x100,
        SITH_AF_BOSS                = 0x200,
        SITH_AF_DEAF                = 0x400,
        SITH_AF_BLIND               = 0x800,
        SITH_AF_SEEINVISIBLE        = 0x1000,
        SITH_AF_POISONED            = 0x2000,
        SITH_AF_FASTMOVE15          = 0x4000,
        SITH_AF_FASTMOVE10          = 0x8000,
        SITH_AF_NOSLOPEMOVE         = 0x10000,
        SITH_AF_DELAYFIRE           = 0x20000,
        SITH_AF_IMMOBILE            = 0x40000,
        SITH_AF_NOUNDERWATERFIRE    = 0x80000,
        SITH_AF_NOTARGET            = 0x100000,
        SITH_AF_CONTROLSDISABLED    = 0x200000,
        SITH_AF_FALLKILLED          = 0x400000,
        SITH_AF_NOIDLECAMERA        = 0x800000,
        SITH_AF_FULLDAMAGE          = 0x1000000,
        SITH_AF_SEEINDARK           = 0x2000000,
        SITH_AF_UNKNOWN_4000000     = 0x4000000,
        SITH_AF_HUMAN               = 0x8000000,
        SITH_AF_FLYERMOVE           = 0x10000000,
        SITH_AF_UNKNOWN_20000000    = 0x20000000,
        SITH_AF_ELECTRICWHIP        = 0x40000000,
        SITH_AF_ARACHNID            = 0x80000000,
} SithActorFlag;

typedef enum eSithWeaponFlag
{
    SITH_WF_NOSHOOTERDAMAGE              = 0x1,
    SITH_WF_FACEHITEXPLODE               = 0x4,
    SITH_WF_THINGHITEXPLODE              = 0x8,
    SITH_WF_ATTACHFACE                   = 0x80,
    SITH_WF_EXPLODE                      = 0x100,
    SITH_WF_DAMAGEDESTROY                = 0x200,
    SITH_WF_IMPACTSOUND                  = 0x400,
    SITH_WF_ATTACHTHING                  = 0x800,
    SITH_WF_PROXIMITY                    = 0x1000,
    SITH_WF_INSTANTIMPACT                = 0x2000,
    SITH_WF_DAMAGEDECAY                  = 0x4000,
    SITH_WF_OBJECTTRAIL                  = 0x8000,
    SITH_WF_AITARGETNODODGE              = 0x20000,
    SITH_WF_DECAYEMITSOUNDAWARENESSEVENT = 0x40000,
    SITH_WF_SURFACERICOCHET              = 0x80000,
    SITH_WF_EMITAITARGETEDEVENT          = 0x200000,
    SITH_WF_ACTORKILLDESTROY             = 0x400000,
    SITH_WF_MOPHIABOMB                   = 0x800000,
} SithWeaponFlag;

typedef enum eSithParticleFlag
{
    SITHPARTICLE_FLAG_OUTWARD_EXPANDING  = 0x1,
    SITHPARTICLE_FLAG_ANIMATE_CEL        = 0x2,
    SITHPARTICLE_FLAG_RANDOM_START_CEL   = 0x4,
    SITHPARTICLE_FLAG_FADE_OUT_OVER_TIME = 0x8,
    SITHPARTICLE_FLAG_EMIT_LIGHT         = 0x10,
    SITHPARTICLE_FLAG_RANDOM_CEL_CHANGE  = 0x20,
    SITHPARTICLE_FLAG_TIMEOUT_RATE       = 0x40,
} SithParticleFlag;

typedef enum eSithItemFlag
{
    SITH_ITEM_RESPAWN_MP = 0x1,
    SITH_ITEM_RESPAWN_SP = 0x2,
    SITH_ITEM_BACKPACK   = 0x4,
} SithItemFlag;

typedef enum eSithCogSymbolRefType
{
    SITHCOG_SYM_REF_NONE     = 0,
    SITHCOG_SYM_REF_INT      = 1,
    SITHCOG_SYM_REF_FLEX     = 2,
    SITHCOG_SYM_REF_THING    = 3,
    SITHCOG_SYM_REF_TEMPLATE = 4,
    SITHCOG_SYM_REF_SECTOR   = 5,
    SITHCOG_SYM_REF_SURFACE  = 6,
    SITHCOG_SYM_REF_KEYFRAME = 7,
    SITHCOG_SYM_REF_SOUND    = 8,
    SITHCOG_SYM_REF_COG      = 9,
    SITHCOG_SYM_REF_MATERIAL = 10,
    SITHCOG_SYM_REF_VECTOR   = 11,
    SITHCOG_SYM_REF_MODEL    = 12,
    SITHCOG_SYM_REF_AICLASS  = 13,
} SithCogSymbolRefType;

typedef enum eSithPlayerMove J3D_ENUM_TYPE(int32_t)
{
    SITHPLAYERMOVE_CLIMBING_STILL = 0x9,
        SITHPLAYERMOVE_DUCKSTATUS1    = 0x33,
        SITHPLAYERMOVE_DUCKSTATUS2    = 0x34,
        SITHPLAYERMOVE_ENTERING_RAFT  = 0x46,
} SithPlayerMove;

typedef enum eSithSoundClassMode
{
    SITHSOUNDCLASS_CREATE         = 1,
    SITHSOUNDCLASS_ACTIVATE       = 2,
    SITHSOUNDCLASS_STARTMOVE      = 3,
    SITHSOUNDCLASS_STOPMOVE       = 4,
    SITHSOUNDCLASS_MOVING         = 5,
    SITHSOUNDCLASS_LWALKHARD      = 6,
    SITHSOUNDCLASS_RWALKHARD      = 7,
    SITHSOUNDCLASS_LRUNHARD       = 8,
    SITHSOUNDCLASS_RRUNHARD       = 9,
    SITHSOUNDCLASS_LWALKMETAL     = 10,
    SITHSOUNDCLASS_RWALKMETAL     = 11,
    SITHSOUNDCLASS_LRUNMETAL      = 12,
    SITHSOUNDCLASS_RRUNMETAL      = 13,
    SITHSOUNDCLASS_LWALKWATER     = 14,
    SITHSOUNDCLASS_RWALKWATER     = 15,
    SITHSOUNDCLASS_LRUNWATER      = 16,
    SITHSOUNDCLASS_RRUNWATER      = 17,
    SITHSOUNDCLASS_LWALKPUDDLE    = 18,
    SITHSOUNDCLASS_RWALKPUDDLE    = 19,
    SITHSOUNDCLASS_LRUNPUDDLE     = 20,
    SITHSOUNDCLASS_RRUNPUDDLE     = 21,
    SITHSOUNDCLASS_LWALKEARTH     = 22,
    SITHSOUNDCLASS_RWALKEARTH     = 23,
    SITHSOUNDCLASS_LRUNEARTH      = 24,
    SITHSOUNDCLASS_RRUNEARTH      = 25,
    SITHSOUNDCLASS_LWALKSNOW      = 26,
    SITHSOUNDCLASS_RWALKSNOW      = 27,
    SITHSOUNDCLASS_LRUNSNOW       = 28,
    SITHSOUNDCLASS_RRUNSNOW       = 29,
    SITHSOUNDCLASS_LWALKWOOD      = 30,
    SITHSOUNDCLASS_RWALKWOOD      = 31,
    SITHSOUNDCLASS_LRUNWOOD       = 32,
    SITHSOUNDCLASS_RRUNWOOD       = 33,
    SITHSOUNDCLASS_LWALKHARDECHO  = 34,
    SITHSOUNDCLASS_RWALKHARDECHO  = 35,
    SITHSOUNDCLASS_LRUNHARDECHO   = 36,
    SITHSOUNDCLASS_RRUNHARDECHO   = 37,
    SITHSOUNDCLASS_LWALKWOODECHO  = 38,
    SITHSOUNDCLASS_RWALKWOODECHO  = 39,
    SITHSOUNDCLASS_LRUNWOODECHO   = 40,
    SITHSOUNDCLASS_RRUNWOODECHO   = 41,
    SITHSOUNDCLASS_LWALKEARTHECHO = 42,
    SITHSOUNDCLASS_RWALKEARTHECHO = 43,
    SITHSOUNDCLASS_LRUNEARTHECHO  = 44,
    SITHSOUNDCLASS_RRUNEARTHECHO  = 45,
    SITHSOUNDCLASS_LWALKAET       = 46,
    SITHSOUNDCLASS_RWALKAET       = 47,
    SITHSOUNDCLASS_LRUNAET        = 48,
    SITHSOUNDCLASS_RRUNAET        = 49,
    SITHSOUNDCLASS_ENTERWATER     = 50,
    SITHSOUNDCLASS_ENTERWATERSLOW = 51,
    SITHSOUNDCLASS_EXITWATER      = 52,
    SITHSOUNDCLASS_EXITWATERSLOW  = 53,
    SITHSOUNDCLASS_LSWIMSURFACE   = 54,
    SITHSOUNDCLASS_RSWIMSURFACE   = 55,
    SITHSOUNDCLASS_TREADSURFACE   = 56,
    SITHSOUNDCLASS_LSWIMUNDER     = 57,
    SITHSOUNDCLASS_RSWIMUNDER     = 58,
    SITHSOUNDCLASS_TREADUNDER     = 59,
    SITHSOUNDCLASS_JUMP           = 60,
    SITHSOUNDCLASS_JUMPMETAL      = 61,
    SITHSOUNDCLASS_JUMPWATER      = 62,
    SITHSOUNDCLASS_JUMPEARTH      = 63,
    SITHSOUNDCLASS_JUMPSNOW       = 64,
    SITHSOUNDCLASS_JUMPWOOD       = 65,
    SITHSOUNDCLASS_JUMPHARDECHO   = 66,
    SITHSOUNDCLASS_JUMPWOODECHO   = 67,
    SITHSOUNDCLASS_JUMPEARTHECHO  = 68,
    SITHSOUNDCLASS_JUMPAET        = 69,
    SITHSOUNDCLASS_LANDHARD       = 70,
    SITHSOUNDCLASS_LANDMETAL      = 71,
    SITHSOUNDCLASS_LANDWATER      = 72,
    SITHSOUNDCLASS_LANDPUDDLE     = 73,
    SITHSOUNDCLASS_LANDEARTH      = 74,
    SITHSOUNDCLASS_LANDSNOW       = 75,
    SITHSOUNDCLASS_LANDWOOD       = 76,
    SITHSOUNDCLASS_LANDHARDECHO   = 77,
    SITHSOUNDCLASS_LANDWOODECHO   = 78,
    SITHSOUNDCLASS_LANDEARTHECHO  = 79,
    SITHSOUNDCLASS_LANDAET        = 80,
    SITHSOUNDCLASS_LANDHURT       = 81,
    SITHSOUNDCLASS_HITHARD        = 82,
    SITHSOUNDCLASS_HITMETAL       = 83,
    SITHSOUNDCLASS_HITEARTH       = 84,
    SITHSOUNDCLASS_DEFLECTED      = 85,
    SITHSOUNDCLASS_SCRAPEHARD     = 86,
    SITHSOUNDCLASS_SCRAPEMETAL    = 87,
    SITHSOUNDCLASS_SCRAPEEARTH    = 88,
    SITHSOUNDCLASS_HITDAMAGED     = 89,
    SITHSOUNDCLASS_FALLING        = 90,
    SITHSOUNDCLASS_CORPSEHIT      = 91,
    SITHSOUNDCLASS_HURTIMPACT     = 92,
    SITHSOUNDCLASS_HURTENERGY     = 93,
    SITHSOUNDCLASS_HURTFIRE       = 94,
    SITHSOUNDCLASS_HURTFISTS      = 95,
    SITHSOUNDCLASS_HURTMACHETE    = 96,
    SITHSOUNDCLASS_DROWNING       = 97,
    SITHSOUNDCLASS_DEATH1         = 98,
    SITHSOUNDCLASS_DEATH2         = 99,
    SITHSOUNDCLASS_DEATHUNDER     = 100,
    SITHSOUNDCLASS_DROWNED        = 101,
    SITHSOUNDCLASS_SPLATTERED     = 102,
    SITHSOUNDCLASS_PANT           = 103,
    SITHSOUNDCLASS_BREATH         = 104,
    SITHSOUNDCLASS_GASP           = 105,
    SITHSOUNDCLASS_FIRE1          = 106,
    SITHSOUNDCLASS_FIRE2          = 107,
    SITHSOUNDCLASS_FIRE3          = 108,
    SITHSOUNDCLASS_FIRE4          = 109,
    SITHSOUNDCLASS_CURIOUS        = 110,
    SITHSOUNDCLASS_ALERT          = 111,
    SITHSOUNDCLASS_IDLE           = 112,
    SITHSOUNDCLASS_GLOAT          = 113,
    SITHSOUNDCLASS_FEAR           = 114,
    SITHSOUNDCLASS_BOAST          = 115,
    SITHSOUNDCLASS_SLIDE1         = 116,
    SITHSOUNDCLASS_VICTORY        = 117,
    SITHSOUNDCLASS_HELP           = 118,
    SITHSOUNDCLASS_FLEE           = 119,
    SITHSOUNDCLASS_SEARCH         = 120,
    SITHSOUNDCLASS_CALM           = 121,
    SITHSOUNDCLASS_SURPRISE       = 122,
    SITHSOUNDCLASS_RESERVED1      = 123,
    SITHSOUNDCLASS_RESERVED2      = 124,
    SITHSOUNDCLASS_RESERVED3      = 125,
    SITHSOUNDCLASS_RESERVED4      = 126,
    SITHSOUNDCLASS_RESERVED5      = 127,
    SITHSOUNDCLASS_RESERVED6      = 128,
    SITHSOUNDCLASS_RESERVED7      = 129,
    SITHSOUNDCLASS_RESERVED8      = 130,
    SITHSOUNDCLASS_STAND2WALK     = 131,
    SITHSOUNDCLASS_WALK2STAND     = 132,
    SITHSOUNDCLASS_CLIMBHANDLEFT  = 133,
    SITHSOUNDCLASS_CLIMBHANDRIGHT = 134,
    SITHSOUNDCLASS_CLIMBHORIZ     = 135,
    SITHSOUNDCLASS_CLIMBONTO      = 136,
    SITHSOUNDCLASS_CLIMBDOWNONTO  = 137,
    SITHSOUNDCLASS_LSWIMAET       = 138,
    SITHSOUNDCLASS_RSWIMAET       = 139,
    SITHSOUNDCLASS_TREADAET       = 140,
} SithSoundClassMode;

typedef enum eSithEventTaskMode
{
    SITHEVENT_TASKDISABLED = 0x0,
    SITHEVENT_TASKINTERVAL = 0x1,
    SITHEVENT_TASKONDEMAND = 0x2,
} SithEventTaskMode;

typedef enum eSithAIEventType
{
    SITHAI_EVENT_HIT_SECTOR          = 0x1,
    SITHAI_EVENT_SOUND               = 0x2,
    SITHAI_EVENT_TOUCHED             = 0x4,
    SITHAI_EVENT_UNKNOWN_8           = 0x8,
    SITHAI_EVENT_UNKNOWN_10          = 0x10,
    SITHAI_EVENT_UNKNOWN_20          = 0x20,
    SITHAI_EVENT_MOVE_TARGET_CHANGED = 0x40,
    SITHAI_EVENT_UNKNOWN_80          = 0x80,
    SITHAI_EVENT_MODECHANGED         = 0x100,
    SITHAI_EVENT_HIT_WALL            = 0x200,
    SITHAI_EVENT_HIT_CLIFF           = 0x400,
    SITHAI_EVENT_GOAL_REACHED        = 0x800,
    SITHAI_EVENT_TARGETED            = 0x1000,
    SITHAI_EVENT_GOAL_SET            = 0x2000,
    SITHAI_EVENT_FIRE                = 0x4000,
    SITHAI_EVENT_HIT_THING           = 0x8000,
    SITHAI_EVENT_PREFIRE             = 0x10000,
    SITHAI_EVENT_POSTFIRE            = 0x20000,
    SITHAI_EVENT_UNKNOWN_40000       = 0x40000,
    SITHAI_EVENT_GOAL_UNREACHABLE    = 0x80000,
    SITHAI_EVENT_HIT_FLOOR           = 0x100000,
    SITHAI_EVENT_LAND_FLOOR          = 0x200000,
    SITHAI_EVENT_TALK                = 0x400000,
} SithAIEventType;

typedef enum eSithAIInstinctFlag J3D_ENUM_TYPE(int32_t)
{
    SITHAI_INSTINCT_DISABLED = 0x1,
} SithAIInstinctFlag;

typedef enum eSithAIUtilFireFlags
{
    SITHAIUTIL_FIRE_LEAD         = 0x1,
    SITHAIUTIL_FIRE_LOB          = 0x2,
    SITHAIUTIL_FIRE_UNKNOWN_4    = 0x4,
    SITHAIUTIL_FIRE_UNKNOWN_8    = 0x8,
    SITHAIUTIL_FIRE_PRIMARY      = 0x10,
    SITHAIUTIL_FIRE_ALT          = 0x20,
    SITHAIUTIL_FIRE_UNKNOWN_40   = 0x40,
    SITHAIUTIL_FIRE_UNKNOWN_80   = 0x80,
    SITHAIUTIL_FIRE_UNKNOWN_100  = 0x100,
    SITHAIUTIL_FIRE_UNKNOWN_200  = 0x200,
    SITHAIUTIL_FIRE_STOP_ON_FIRE = 0x400,
} SithAIUtilFireFlags;

typedef enum eSithThingMoveStatus
{
    SITHPLAYERMOVE_STILL                               = 0,
    SITHPLAYERMOVE_WALKING                             = 1,
    SITHPLAYERMOVE_RUNNING                             = 2,
    SITHPLAYERMOVE_CRAWL_STILL                         = 3,
    SITHPLAYERMOVE_UNKNOWN_4                           = 4,
    SITHPLAYERMOVE_UNKNOWN_5                           = 5,
    SITHPLAYERMOVE_HANGING                             = 6,
    SITHPLAYERMOVE_PUSHING                             = 7,
    SITHPLAYERMOVE_PULLING                             = 8,
    SITHPLAYERMOVE_CLIMBIDLE                           = 9,
    SITHPLAYERMOVE_WHIPSWINGING                        = 10,
    SITHPLAYERMOVE_WHIPCLIMBIDLE                       = 11,
    SITHPLAYERMOVE_SWIMIDLE                            = 12,
    SITHPLAYERMOVE_JUMPFWD                             = 13,
    SITHPLAYERMOVE_JUMPUP                              = 14,
    SITHPLAYERMOVE_FALLING                             = 15,
    SITHPLAYERMOVE_LAND                                = 16,
    SITHPLAYERMOVE_JEEP_IMPACT                         = 17,
    SITHPLAYERMOVE_JUMP_READY                          = 18,
    SITHPLAYERMOVE_PUSHPULL_READY                      = 19,
    SITHPLAYERMOVE_MOUNTING_WALL                       = 20,
    SITHPLAYERMOVE_UNKNOWN_21                          = 21,
    SITHPLAYERMOVE_CLIMBING_UP                         = 22,
    SITHPLAYERMOVE_CLIMBING_DOWN                       = 23,
    SITHPLAYERMOVE_CLIMBING_LEFT                       = 24,
    SITHPLAYERMOVE_CLIMBING_RIGHT                      = 25,
    SITHPLAYERMOVE_PULLINGUP                           = 26,
    SITHPLAYERMOVE_PULLINGUP_1M                        = 27,
    SITHPLAYERMOVE_WHIP_CLIMB_START                    = 28,
    SITHPLAYERMOVE_WHIP_UNK2                           = 29,
    SITHPLAYERMOVE_MINECAR_IDLE                        = 30,
    SITHPLAYERMOVE_JEEP_STILL                          = 31,
    SITHPLAYERMOVE_RAFT_STILL                          = 32,
    SITHPLAYERMOVE_RAFT_PADDLE_FORWARD_LEFT            = 33,
    SITHPLAYERMOVE_RAFT_PADDLE_FORWARD_RIGHT           = 34,
    SITHPLAYERMOVE_RAFT_TURN_LEFT                      = 35,
    SITHPLAYERMOVE_RAFT_TURN_RIGHT                     = 36,
    SITHPLAYERMOVE_RAFT_PADDLE_BACK_LEFT               = 37,
    SITHPLAYERMOVE_RAFT_PADDLE_BACK_RIGHT              = 38,
    SITHPLAYERMOVE_RAFT_STARTPADDLE_LEFT               = 39,
    SITHPLAYERMOVE_RAFT_ENDPADDLE_LEFT                 = 40,
    SITHPLAYERMOVE_RAFT_ENDPADDLE_RIGHT                = 41,
    SITHPLAYERMOVE_RAFT_STARTPADDLE_RIGHT              = 42,
    SITHPLAYERMOVE_RAFT_PADDLERIGHT_STARTPADDLE_LEFT   = 43,
    SITHPLAYERMOVE_RAFT_PADDLEL_LEFT_STARTPADDLE_RIGHT = 44,
    SITHPLAYERMOVE_UNKNOWN_45                          = 45,
    SITHPLAYERMOVE_UNKNOWN_46                          = 46,
    SITHPLAYERMOVE_SLIDING                             = 47,
    SITHPLAYERMOVE_MINECAR_BOARDING                    = 48,
    SITHPLAYERMOVE_MINECAR_UNBOARDING_LEFT             = 49,
    SITHPLAYERMOVE_MINECAR_UNBOARDING_RIGHT            = 50,
    SITHPLAYERMOVE_MINECAR_DUCKING                     = 51,
    SITHPLAYERMOVE_MINECAR_DUCKED                      = 52,
    SITHPLAYERMOVE_MINECAR_GETTING_UP                  = 53,
    SITHPLAYERMOVE_JEEP_BOARDING                       = 54,
    SITHPLAYERMOVE_ROLLING_LEFT                        = 55,
    SITHPLAYERMOVE_ROLLING_RIGHT                       = 56,
    SITHPLAYERMOVE_STRAFING_LEFT                       = 57,
    SITHPLAYERMOVE_STRAFING_RIGHT                      = 58,
    SITHPLAYERMOVE_ACTIVATING                          = 59,
    SITHPLAYERMOVE_UNKNOWN_60                          = 60,
    SITHPLAYERMOVE_JUMPBACK                            = 61,
    SITHPLAYERMOVE_SLIDEDOWNFORWARD                    = 62,
    SITHPLAYERMOVE_UNKNOWN_63                          = 63,
    SITHPLAYERMOVE_STAND_TO_CRAWL                      = 64,
    SITHPLAYERMOVE_CRAWL_TO_STAND                      = 65,
    SITHPLAYERMOVE_JUMPROLLBACK                        = 66,
    SITHPLAYERMOVE_JUMPROLLFWD                         = 67,
    SITHPLAYERMOVE_CLIMB_DOWN_TO_MOUNT                 = 68,
    SITHPLAYERMOVE_CLIMB_TO_HANG                       = 69,
    SITHPLAYERMOVE_RAFT_BOARDING                       = 70,
    SITHPLAYERMOVE_RAFT_UNBOARDING_LEFT                = 71,
    SITHPLAYERMOVE_RAFT_UNBOARDING_RIGHT               = 72,
    SITHPLAYERMOVE_RAFT_UNBOARD_START                  = 73,
    SITHPLAYERMOVE_TURNING_LEFT                        = 74,
    SITHPLAYERMOVE_TURNING_RIGHT                       = 75,
    SITHPLAYERMOVE_WALK2STAND                          = 76,
    SITHPLAYERMOVE_STAND2WALK                          = 77,
    SITHPLAYERMOVE_UNKNOWN_78                          = 78,
    SITHPLAYERMOVE_STAND2RUN                           = 79,
    SITHPLAYERMOVE_UNKNOWN_80                          = 80,
    SITHPLAYERMOVE_UNKNOWN_81                          = 81,
    SITHPLAYERMOVE_UNKNOWN_82                          = 82,
    SITHPLAYERMOVE_UNKNOWN_83                          = 83,
    SITHPLAYERMOVE_UNKNOWN_84                          = 84,
    SITHPLAYERMOVE_JEEP_UNBOARDING                     = 85,
    SITHPLAYERMOVE_UNKNOWN_86                          = 86,
    SITHPLAYERMOVE_JEWELFLYING                         = 87,
    SITHPLAYERMOVE_JEWELFLYING_UNKN1                   = 88,
    SITHPLAYERMOVE_JEWELFLYING_UNKN2                   = 89,
    SITHPLAYERMOVE_SLIDEDOWNBACK                       = 90,
    SITHPLAYERMOVE_KNOCKEDOUT                          = 91,
    SITHPLAYERMOVE_JUMPLEFT                            = 92,
    SITHPLAYERMOVE_JUMPRIGHT                           = 93,
    SITHPLAYERMOVE_LEAPFWD                             = 94,
    SITHPLAYERMOVE_RUNOVER                             = 95,
    SITHPLAYERMOVE_TURNING_LEFT_45_DEGREES             = 96,
    SITHPLAYERMOVE_TURNING_RIGHT_45_DEGREES            = 97,
    SITHPLAYERMOVE_TURNING_LEFT_90_DEGREES             = 98,
    SITHPLAYERMOVE_TURNING_RIGHT_90_DEGREES            = 99,
    SITHPLAYERMOVE_TURNING_LEFT_135_DEGREES            = 100,
    SITHPLAYERMOVE_TURNING_RIGHT_135_DEGREES           = 101,
    SITHPLAYERMOVE_TURNING_180_DEGREES                 = 102,
    SITHPLAYERMOVE_UNKNOWN_103                         = 103,
    SITHPLAYERMOVE_UNKNOWN_104                         = 104,
    SITHPLAYERMOVE_UNKNOWN_105                         = 105,
    SITHPLAYERMOVE_UNKNOWN_106                         = 106,
} SithThingMoveStatus;

typedef enum eSithPuppetMoveMode
{
    SITHPUPPET_MOVEMODE_NORMAL = 0,
    SITHPUPPET_MOVEMODE_SWIM   = 1,
    SITHPUPPET_MOVEMODE_CRAWL  = 2,
} SithPuppetMoveMode;

typedef enum eSithPuppetSubMode
{
    SITHPUPPETSUBMODE_STAND             = 1,
    SITHPUPPETSUBMODE_WALK              = 2,
    SITHPUPPETSUBMODE_RUN               = 3,
    SITHPUPPETSUBMODE_WALKBACK          = 4,
    SITHPUPPETSUBMODE_HOPBACK           = 5,
    SITHPUPPETSUBMODE_HOPLEFT           = 6,
    SITHPUPPETSUBMODE_HOPRIGHT          = 7,
    SITHPUPPETSUBMODE_STRAFELEFT        = 8,
    SITHPUPPETSUBMODE_STRAFERIGHT       = 9,
    SITHPUPPETSUBMODE_TURNLEFT          = 10,
    SITHPUPPETSUBMODE_TURNRIGHT         = 11,
    SITHPUPPETSUBMODE_SLIDEDOWNFWD      = 12,
    SITHPUPPETSUBMODE_SLIDEDOWNBACK     = 13,
    SITHPUPPETSUBMODE_LEAP              = 14,
    SITHPUPPETSUBMODE_JUMPREADY         = 15,
    SITHPUPPETSUBMODE_JUMPUP            = 16,
    SITHPUPPETSUBMODE_JUMPFWD           = 17,
    SITHPUPPETSUBMODE_RISING            = 18,
    SITHPUPPETSUBMODE_FALL              = 19,
    SITHPUPPETSUBMODE_DEATH             = 20,
    SITHPUPPETSUBMODE_DEATH2            = 21,
    SITHPUPPETSUBMODE_FIDGET            = 22,
    SITHPUPPETSUBMODE_FIDGET2           = 23,
    SITHPUPPETSUBMODE_PICKUP            = 24,
    SITHPUPPETSUBMODE_PUSHPULLREADY     = 25,
    SITHPUPPETSUBMODE_PUSHITEM          = 26,
    SITHPUPPETSUBMODE_PULLITEM          = 27,
    SITHPUPPETSUBMODE_MOUNTLEDGE        = 28,
    SITHPUPPETSUBMODE_GRABLEDGE         = 29,
    SITHPUPPETSUBMODE_HANGLEDGE         = 30,
    SITHPUPPETSUBMODE_HANGSHIMLEFT      = 31,
    SITHPUPPETSUBMODE_HANGSHIMRIGHT     = 32,
    SITHPUPPETSUBMODE_MOUNTWALL         = 33,
    SITHPUPPETSUBMODE_CLIMBWALLIDLE     = 34,
    SITHPUPPETSUBMODE_CLIMBWALLUP       = 35,
    SITHPUPPETSUBMODE_CLIMBWALLDOWN     = 36,
    SITHPUPPETSUBMODE_CLIMBWALLLEFT     = 37,
    SITHPUPPETSUBMODE_CLIMBWALLRIGHT    = 38,
    SITHPUPPETSUBMODE_CLIMBPULLINGUP    = 39,
    SITHPUPPETSUBMODE_WHIPCLIMBMOUNT    = 40,
    SITHPUPPETSUBMODE_WHIPCLIMBIDLE     = 41,
    SITHPUPPETSUBMODE_WHIPCLIMBUP       = 42,
    SITHPUPPETSUBMODE_WHIPCLIMBDOWN     = 43,
    SITHPUPPETSUBMODE_WHIPCLIMBLEFT     = 44,
    SITHPUPPETSUBMODE_WHIPCLIMBRIGHT    = 45,
    SITHPUPPETSUBMODE_WHIPCLIMBDISMOUNT = 46,
    SITHPUPPETSUBMODE_WHIPSWINGMOUNT    = 47,
    SITHPUPPETSUBMODE_WHIPSWING         = 48,
    SITHPUPPETSUBMODE_MOUNTFROMWATER    = 49,
    SITHPUPPETSUBMODE_DIVEFROMSURFACE   = 50,
    SITHPUPPETSUBMODE_MOUNT1MSTEP       = 51,
    SITHPUPPETSUBMODE_MOUNT2MLEDGE      = 52,
    SITHPUPPETSUBMODE_JUMPROLLBACK      = 53,
    SITHPUPPETSUBMODE_JUMPROLLFWD       = 54,
    SITHPUPPETSUBMODE_LAND              = 55,
    SITHPUPPETSUBMODE_HITHEADL          = 56,
    SITHPUPPETSUBMODE_HITHEADR          = 57,
    SITHPUPPETSUBMODE_HITSIDEL          = 58,
    SITHPUPPETSUBMODE_HITSIDER          = 59,
    SITHPUPPETSUBMODE_ACTIVATE          = 60,
    SITHPUPPETSUBMODE_ACTIVATEHIGH      = 61,
    SITHPUPPETSUBMODE_DRAWWEAPON        = 62,
    SITHPUPPETSUBMODE_AIMWEAPON         = 63,
    SITHPUPPETSUBMODE_HOLSTERWEAPON     = 64,
    SITHPUPPETSUBMODE_FIRE              = 65,
    SITHPUPPETSUBMODE_FIRE2             = 66,
    SITHPUPPETSUBMODE_FIRE3             = 67,
    SITHPUPPETSUBMODE_FIRE4             = 68,
    SITHPUPPETSUBMODE_STAND2WALK        = 69,
    SITHPUPPETSUBMODE_WALK2STAND        = 70,
    SITHPUPPETSUBMODE_STAND2CRAWL       = 71,
    SITHPUPPETSUBMODE_CRAWL2STAND       = 72,
    SITHPUPPETSUBMODE_WALK2ATTACK       = 73,
    SITHPUPPETSUBMODE_VICTORY           = 74,
    SITHPUPPETSUBMODE_HIT               = 75,
    SITHPUPPETSUBMODE_HIT2              = 76,
    SITHPUPPETSUBMODE_GRABARMS          = 77,
    SITHPUPPETSUBMODE_RESERVED          = 78,
    SITHPUPPETSUBMODE_CLIMBTOCLIMB      = 79,
    SITHPUPPETSUBMODE_CLIMBTOHANG       = 80,
    SITHPUPPETSUBMODE_LEAPLEFT          = 81,
    SITHPUPPETSUBMODE_LEAPRIGHT         = 82,
    SITHPUPPETSUBMODE_FALLFORWARD       = 83,
} SithPuppetSubMode;

typedef enum eSithPlayerFlag
{
    SITH_PLAYER_JOINEDGAME = 0x1,
    SITH_PLAYER_PLACED     = 0x2,
    SITH_PLAYER_UNKNOWN_04 = 0x4,
} SithPlayerFlag;

typedef enum eSithInventoryItemStatus
{
    SITHINVENTORY_ITEM_CHANGED   = 0x1,
    SITHINVENTORY_ITEM_ACTIVATED = 0x2,
    SITHINVENTORY_ITEM_AVAILABLE = 0x4,
    SITHINVENTORY_ITEM_FOUND     = 0x8,
    SITHINVENTORY_ITEM_DISABLED  = 0x10,
} SithInventoryItemStatus;

typedef enum eSithCogStatus
{
    SITHCOG_STATUS_STOPPED                              = 0x0,
    SITHCOG_STATUS_EXECUTING                            = 0x1,
    SITHCOG_STATUS_SLEEPING                             = 0x2,
    SITHCOG_STATUS_WAITING_THING_TO_STOP                = 0x3,
    SITHCOG_STATUS_EXECUTION_SUSPENDED                  = 0x4,
    SITHCOG_STATUS_WAITING_KEYFRAME_TO_STOP             = 0x5,
    SITHCOG_STATUS_WAITING_SOUND_TO_STOP                = 0x6,
    SITHCOG_STATUS_WAITING_AI_TO_STOP                   = 0x7,
    SITHCOG_STATUS_WAITING_ACTOR_WEAPON_SELECT_FINISH   = 0x8,
    SITHCOG_STATUS_WAITING_ACTOR_WEAPON_DESELECT_FINISH = 0x9,
    SITHCOG_STATUS_WAITING_ANIMATION_TO_STOP            = 0xA,
    SITHCOG_STATUS_WAITING_AI_HEAD_TRACK                = 0xB,
    SITHCOG_STATUS_WAITING_PLAYER_TO_STOP               = 0xC,
} SithCogStatus;

typedef enum eSithMineCarType
{
    SITHMINECAR_BOULDER      = 0x0,
    SITHMINECAR_PLAYER       = 0x1,
    SITHMINECAR_DEFAULT      = 0x2,
    SITHMINECAR_KILLTRUCK_AI = 0x3,
    SITHMINECAR_JEEP_AI      = 0x4,
    SITHMINECAR_MINECAR_AI   = 0x5,
    SITHMINECAR_TRUCK_AI     = 0x6,
} SithMineCarType;

typedef enum eSithCameraType J3D_ENUM_TYPE(int32_t)
{
    SITHCAMERA_INTERNAL    = 0x1,
        SITHCAMERA_EXTERNAL    = 0x4,
        SITHCAMERA_CINEMATIC   = 0x8,
        SITHCAMERA_UNKNOWN_10  = 0x10,
        SITHCAMERA_IDLE        = 0x20,
        SITHCAMERA_UNKNOWN_40  = 0x40,
        SITHCAMERA_ORBITAL     = 0x80,
        SITHCAMERA_UNKNOWN_100 = 0x100,
} SithCameraType;

typedef enum eSithAIWaypointLayerFlag
{
    SITH_AIWPNT_DISABLED = 0x100,
    SITH_AIWPNT_LAYER0   = 0x1000,
    SITH_AIWPNT_LAYER1   = 0x2000,
    SITH_AIWPNT_LAYER2   = 0x4000,
    SITH_AIWPNT_LAYER3   = 0x8000,
    SITH_AIWPNT_LAYER4   = 0x10000,
    SITH_AIWPNT_LAYER5   = 0x20000,
} SithAIWaypointLayerFlag;

typedef enum eSithControlBindFlag
{
    SITHCONTROLBIND_AXISCONTROL      = 0x1,
    SITHCONTROLBIND_KEYCONTROL       = 0x2,
    SITHCONTROLBIND_INVERT_AXIS      = 0x4,
    SITHCONTROLBIND_AXIS_ENABLED     = 0x8,
    SITHCONTROLBIND_AXIS_HASDEADZONE = 0x10,
} SithControlBindFlag;

typedef enum eSithControlFunctionFlag
{
    SITHCONTROLFUNCTION_REGISTERED = 0x1,
    SITHCONTROLFUNCTION_AXIS       = 0x2,
    SITHCONTROLFUNCTION_KEY        = 0x4,
    SITHCONTROLFUNCTION_UNKNOWN_8  = 0x8
} SithControlFunctionFlag;

typedef enum eSithControlFunction
{
    SITHCONTROL_FORWARD       = 0,
    SITHCONTROL_BACK          = 1,
    SITHCONTROL_LEFT          = 2,
    SITHCONTROL_RIGHT         = 3,
    SITHCONTROL_TURNLEFT      = 4,
    SITHCONTROL_TURNRIGHT     = 5,
    SITHCONTROL_JUMP          = 6,
    SITHCONTROL_CRAWLTOGGLE   = 7,
    SITHCONTROL_ACT1          = 8,
    SITHCONTROL_FIRE1         = 9,
    SITHCONTROL_ACTIVATE      = 10,
    SITHCONTROL_ACT2          = 11,
    SITHCONTROL_ACT3          = 12,
    SITHCONTROL_NEXTWEAP      = 13,
    SITHCONTROL_PREVWEAP      = 14,
    SITHCONTROL_LIGHTERTOGGLE = 15,
    SITHCONTROL_LOOK          = 16,
    SITHCONTROL_STPLEFT       = 17,
    SITHCONTROL_STPRIGHT      = 18,
    SITHCONTROL_WEAPONTOGGLE  = 19,
    SITHCONTROL_WSELECT0      = 20,
    SITHCONTROL_WSELECT1      = 21,
    SITHCONTROL_WSELECT2      = 22,
    SITHCONTROL_WSELECT3      = 23,
    SITHCONTROL_WSELECT4      = 24,
    SITHCONTROL_WSELECT5      = 25,
    SITHCONTROL_WSELECT6      = 26,
    SITHCONTROL_WSELECT7      = 27,
    SITHCONTROL_WSELECT8      = 28,
    SITHCONTROL_WSELECT9      = 29,
    SITHCONTROL_WSELECT10     = 30,
    SITHCONTROL_WSELECT11     = 31,
    SITHCONTROL_WSELECT12     = 32,
    SITHCONTROL_WSELECT13     = 33,
    SITHCONTROL_WSELECT14     = 34,
    SITHCONTROL_WSELECT15     = 35,
    SITHCONTROL_WSELECT16     = 36,
    SITHCONTROL_USEINV        = 37,
    SITHCONTROL_GAMESAVE      = 38,
    SITHCONTROL_DEBUG         = 39,
    SITHCONTROL_NEXTWEAPON    = 40,
    SITHCONTROL_PREVWEAPON    = 41,
    SITHCONTROL_MAP           = 42,
    SITHCONTROL_INCREASE      = 43,
    SITHCONTROL_DECREASE      = 44,
    SITHCONTROL_CAMERAMODE    = 45,
    SITHCONTROL_TALK          = 46,
    SITHCONTROL_SCREENSHOT    = 47,
    SITHCONTROL_CAMERAZOOMIN  = 48,
    SITHCONTROL_CAMERAZOOMOUT = 49,
    SITHCONTROL_PITCH         = 50,
    SITHCONTROL_CENTER        = 51,
    SITHCONTROL_MLOOK         = 52,
    SITHCONTROL_MOUSETURN     = 53,
    SITHCONTROL_GAMMA         = 54,
    SITHCONTROL_RUNFWD        = 55,
    SITHCONTROL_HEALTH        = 56,
    SITHCONTROL_CHALK         = 57
} SithControlFunction;

typedef enum eSithCameraState
{
    SITHCAMERA_STATE_CUTSCENE = 0x1,
} SithCameraState;

typedef enum eSithThingArg
{
    SITHTHING_ARG_TYPE           = 1,
    SITHTHING_ARG_COLLIDE        = 2,
    SITHTHING_ARG_MOVE           = 3,
    SITHTHING_ARG_SIZE           = 4,
    SITHTHING_ARG_THINGFLAGS     = 5,
    SITHTHING_ARG_TIMER          = 6,
    SITHTHING_ARG_LIGHT          = 7,
    SITHTHING_ARG_ATTACH         = 8,
    SITHTHING_ARG_SOUNDCLASS     = 9,
    SITHTHING_ARG_MODEL3D        = 10,
    SITHTHING_ARG_SPRITE         = 11,
    SITHTHING_ARG_SURFDRAG       = 12,
    SITHTHING_ARG_AIRDRAG        = 13,
    SITHTHING_ARG_STATICDRAG     = 14,
    SITHTHING_ARG_MASS           = 15,
    SITHTHING_ARG_HEIGHT         = 16,
    SITHTHING_ARG_PHYSFLAGS      = 17,
    SITHTHING_ARG_MAXROTVEL      = 18,
    SITHTHING_ARG_MAXVEL         = 19,
    SITHTHING_ARG_VEL            = 20,
    SITHTHING_ARG_ANGVEL         = 21,
    SITHTHING_ARG_TYPEFLAGS      = 22,
    SITHTHING_ARG_HEALTH         = 23,
    SITHTHING_ARG_MAXTHRUST      = 24,
    SITHTHING_ARG_MAXROTTHRUST   = 25,
    SITHTHING_ARG_MAXHEADVEL     = 26,
    SITHTHING_ARG_MAXHEADYAW     = 27,
    SITHTHING_ARG_JUMPSPEED      = 28,
    SITHTHING_ARG_WEAPON         = 29,
    SITHTHING_ARG_DAMAGE         = 30,
    SITHTHING_ARG_MINDAMAGE      = 31,
    SITHTHING_ARG_DAMAGECLASS    = 32,
    SITHTHING_ARG_EXPLODE        = 33,
    SITHTHING_ARG_FRAME          = 34,
    SITHTHING_ARG_NUMFRAMES      = 35,
    SITHTHING_ARG_PUPPET         = 36,
    SITHTHING_ARG_BLASTTIME      = 37,
    SITHTHING_ARG_BABYTIME       = 38,
    SITHTHING_ARG_FORCE          = 39,
    SITHTHING_ARG_MAXLIGHT       = 40,
    SITHTHING_ARG_RANGE          = 41,
    SITHTHING_ARG_FLASHRGB       = 42,
    SITHTHING_ARG_EXPANDTIME     = 43,
    SITHTHING_ARG_FADETIME       = 44,
    SITHTHING_ARG_AICLASS        = 45,
    SITHTHING_ARG_COG            = 46,
    SITHTHING_ARG_RESPAWN        = 47,
    SITHTHING_ARG_MATERIAL       = 48,
    SITHTHING_ARG_RATE           = 49,
    SITHTHING_ARG_COUNT          = 50,
    SITHTHING_ARG_ELEMENTSIZE    = 51,
    SITHTHING_ARG_PARTICLE       = 52,
    SITHTHING_ARG_MAXHEALTH      = 53,
    SITHTHING_ARG_MOVESIZE       = 54,
    SITHTHING_ARG_ORIENTSPEED    = 55,
    SITHTHING_ARG_BUOYANCY       = 56,
    SITHTHING_ARG_EYEOFFSET      = 57,
    SITHTHING_ARG_MINHEADPITCH   = 58,
    SITHTHING_ARG_MAXHEADPITCH   = 59,
    SITHTHING_ARG_FIREOFFSET     = 60,
    SITHTHING_ARG_LIGHTOFFSET    = 61,
    SITHTHING_ARG_LIGHTINTENSITY = 62,
    SITHTHING_ARG_DEBRIS         = 63,
    SITHTHING_ARG_CREATETHING    = 64,
    SITHTHING_ARG_MINSIZE        = 65,
    SITHTHING_ARG_PITCHRANGE     = 66,
    SITHTHING_ARG_YAWRANGE       = 67,
    SITHTHING_ARG_ORIENT         = 68,
    SITHTHING_ARG_USERVAL        = 69,
    SITHTHING_ARG_SPRITETHING    = 70,
    SITHTHING_ARG_SPRITESTART    = 71,
    SITHTHING_ARG_SPRITEEND      = 72,
    SITHTHING_ARG_COLLHEIGHT     = 73,
    SITHTHING_ARG_COLLWIDTH      = 74,
    SITHTHING_ARG_VOICECOLOR     = 75,
    SITHTHING_ARG_PERFLEVEL      = 76,
} SithThingArg;

typedef enum eSithHintFlags
{
    SITH_HINT_SOLVED = 0x4000,
    SITH_HINT_SEEN   = 0x8000,
} SithHintFlags;

typedef enum eSithFireProjectileFlags
{
    SITHFIREPROJECTILE_SCALE_VELOCITY = 0x1,
    SITHFIREPROJECTILE_SCALE_DAMAGE   = 0x2,
    SITHFIREPROJECTILE_UNKNOWN_4      = 0x4,
    SITHFIREPROJECTILE_UNKNOWN_8      = 0x8,
    SITHFIREPROJECTILE_RAPID_FIRE     = 0x10,
    SITHFIREPROJECTILE_AIM_ERROR      = 0x20,
    SITHFIREPROJECTILE_RIGHTHAND_FIRE = 0x80,
    SITHFIREPROJECTILE_TORSO_FIRE     = 0x100,
    SITHFIREPROJECTILE_FIRE_EFFECT    = 0x200,
} SithFireProjectileFlags;

typedef enum eSithWeaponId
{
    SITHWEAPON_NO_WEAPON     = 0,
    SITHWEAPON_FISTS         = 1,
    SITHWEAPON_WHIP          = 2,
    SITHWEAPON_PISTOL        = 3,
    SITHWEAPON_TOKAREV       = 4,
    SITHWEAPON_MAUSER        = 5,
    SITHWEAPON_SIMONOV       = 6,
    SITHWEAPON_MACHETE       = 7,
    SITHWEAPON_SUBMACHINE    = 8,
    SITHWEAPON_SHOTGUN       = 9,
    SITHWEAPON_BAZOOKA       = 10,
    SITHWEAPON_GRENADE       = 11,
    SITHWEAPON_SATCHEL       = 12,
    SITHWEAPON_ZIPPO         = 13,
    SITHWEAPON_IMP1          = 14,
    SITHWEAPON_IMP2          = 15,
    SITHWEAPON_IMP3          = 16,
    SITHWEAPON_IMP4          = 17,
    SITHWEAPON_IMP5          = 18,
    SITHWEAPON_COMFISTS      = 19,
    SITHWEAPON_COMTOKAREV    = 20,
    SITHWEAPON_COMMAUSER     = 21,
    SITHWEAPON_COMSIMONOV    = 22,
    SITHWEAPON_COMSUBMACHINE = 23,
    SITHWEAPON_COMSHOTGUN    = 24,
    SITHWEAPON_CHALK         = 47,
    SITHWEAPON_MIRROR        = 50,
} SithWeaponId;

typedef enum eSithMasterMode
{
    SITH_MODE_CLOSED    = 0,
    SITH_MODE_OPENED    = 1,
    SITH_MODE_UNKNOWN_2 = 2,
} SithMasterMode;

typedef enum eSithMultiJoinStatus J3D_ENUM_TYPE(int32_t)
{
    SITHMULTI_JOIN_OK            = 0,
        SITHMULTI_JOIN_BUSY          = 1,
        SITHMULTI_JOIN_CANCEL        = 3,
        SITHMULTI_JOIN_WRONGCHECKSUM = 4,
        SITHMULTI_JOIN_GAMEFULL      = 5,
        SITHMULTI_JOIN_WRONGLEVEL    = 6,
} SithMultiJoinStatus;

typedef struct sSithAIControlBlock SithAIControlBlock;
typedef struct sSithAIInstinct SithAIInstinct;
typedef struct sSithAIInstinctState SithAIInstinctState;
typedef struct sSithCog SithCog;
typedef struct sSithCogSyntaxNode SithCogSyntaxNode;
typedef struct sSithCollision SithCollision;
typedef struct sSithConsoleCommand SithConsoleCommand;
typedef struct sSithEvent SithEvent;
typedef struct sSithEventParams SithEventParams;
typedef struct sSithMessage SithMessage;
typedef struct sSithPuppetTrack SithPuppetTrack;
typedef struct sSithSoundClassEntry SithSoundClassEntry;
typedef struct sSithSurface SithSurface;
typedef struct sSithSurfaceAdjoin SithSurfaceAdjoin;
typedef struct sSithThing SithThing;
typedef struct sSithThingSwapEntry SithThingSwapEntry;
typedef struct sSithSector SithSector;
typedef struct sSithWorld SithWorld;

typedef int (J3DAPI* SithEventProcess)(int, SithEventParams*);
typedef int (J3DAPI* SithAIInstinctFunc)(SithAIControlBlock*, SithAIInstinct*, SithAIInstinctState*, SithAIEventType, void*);
typedef int (J3DAPI* CollisionHandlerThing)(SithThing*, SithThing*, SithCollision*, int);
typedef int (J3DAPI* SithWorldTextSectionParseFunc)(SithWorld* pWorld, int bSkip);
typedef int (J3DAPI* SithConsoleFunction)(const SithConsoleCommand*, const char*);
typedef int (J3DAPI* CollisionHandlerSurface)(SithThing*, SithSurface*, SithCollision*);
typedef int (J3DAPI* SithControlCallback)(SithThing* pPlayerThing, float secDeltaTime);
typedef int (J3DAPI* SithWorldBinarySectionSectionReadFunc)(tFileHandle fh, SithWorld* pWorld);
typedef int (J3DAPI* SithWorldBinarySectionSectionWriteFunc)(tFileHandle fh, const SithWorld* pWorld);
typedef void (J3DAPI* SithCogFunctionType)(SithCog*);
typedef int (J3DAPI* SithMessageProcessFunc)(const SithMessage*);
typedef int (J3DAPI* SithGameSaveCallback)(DPID idTo, unsigned int outstream);
typedef void (J3DAPI* SithWeaponActorKilledCallback)(size_t difficulty);
typedef void (J3DAPI* SithWorldLoadProgressCallback)(float);
typedef void (J3DAPI* SithOpenCallback)();
typedef void (J3DAPI* SithRenderUnknownFunc)(SithThing* pThing);
typedef void (J3DAPI* SithThingUnknownFunc)(SithThing*);
typedef void (J3DAPI* SithConsoleWriteTextFunc)(const char* pText);
typedef void (J3DAPI* SithConsoleWriteWideTextFunc)(const wchar_t* pWText);
typedef void (*SithConsoleFlushFunc)(void);
typedef void (*SithMultiNewPlayerJoinedCallback)(void);

typedef union sSithCogValue
{
    void* pointerValue;
    float floatValue;
    int intValue;
    char* pString;
    rdVector3 vecValue;
} SithCogValue;
static_assert(sizeof(SithCogValue) == 12, "sizeof(SithCogValue) == 12");

typedef struct sSithCogSymbolValue
{
    SithCogValueType type;
    SithCogValue val;
} SithCogSymbolValue;
static_assert(sizeof(SithCogSymbolValue) == 16, "sizeof(SithCogSymbolValue) == 16");

typedef struct sSithCogSymbol
{
    size_t id;
    SithCogSymbolValue value;
    uint32_t label;
    char* pName;
} SithCogSymbol;
static_assert(sizeof(SithCogSymbol) == 28, "sizeof(SithCogSymbol) == 28");

typedef struct sSithCogSymbolTable
{
    SithCogSymbol* aSymbols;
    tHashTable* pHashtbl;
    size_t numUsedSymbols;
    size_t tableSize;
    size_t firstId;
    int bIsCopy;
} SithCogSymbolTable;
static_assert(sizeof(SithCogSymbolTable) == 24, "sizeof(SithCogSymbolTable) == 24");

typedef struct sSithEventTask
{
    SithEventProcess pfProcess;
    SithEventTaskMode startMode;
    uint32_t msecFrequency;
    uint32_t msecLastIntervalTime;
    int unknown10;
} SithEventTask;
static_assert(sizeof(SithEventTask) == 20, "sizeof(SithEventTask) == 20");

struct sSithEventParams
{
    int idx;
    int param1;
    int param2;
    int param3;
};
static_assert(sizeof(SithEventParams) == 16, "sizeof(SithEventParams) == 16");

typedef struct sSithAIRegisteredInstinct
{
    char aName[63];
    SithAIInstinctFunc pfInstinct;
    SithAIMode updateModes;
    SithAIMode updateBlockModes;
    SithAIEventType triggerEvents;
} SithAIRegisteredInstinct;

struct sSithAIInstinctState
{
    SithAIInstinctFlag flags;
    unsigned int msecNextUpdate;
    float aParams[4];
};

struct sSithAIInstinct
{
    SithAIMode updateModes;
    SithAIMode updateBlockModes;
    SithAIEventType triggerEvents;
    float fltArg[24];
    int intArg[24];
    SithAIInstinctFunc pfInstinct;
};

typedef struct sSithAIClass
{
    int num;
    int unknown1;
    int armedMode;
    float alignment;
    float rank;
    float maxStep;
    float sightDistance;
    float heardDistance;
    float fov;
    float weakupDistance;
    float accurancy;
    float degTurnAlign;
    int numInstincts;
    SithAIInstinct aInstincts[16];
    char aName[64];
} SithAIClass;

typedef struct sSithCollide
{
    SithCollideType type;
    float movesize;
    float size;
    float width;
    float height;
    float unkWidth;
    float unkHeight;
} SithCollide;

struct sSithThingSwapEntry
{
    int entryNum;
    int meshNum;
    rdModel3* pSrcModel;
    int srcMeshNum;
    SithThingSwapEntry* pNextEntry;
};

typedef struct sSithQuetzSnapShot
{
    float unknown0;
    float angle1;
    float angle2;
    float angle3;
    float angle4;
    float angle5;
} SithQuetzSnapShot;

typedef struct sSithQuetzStrike
{
    int unknown0;
    float unknown1;
    int snapShot;
    int unknown3;
    SithQuetzSnapShot aSnapShots[15];
} SithQuetzStrike;

typedef struct sSithQuetzAttachInfo
{
    float unknown0;
    float unknown1;
    float unknown2;
    rdVector3 vecDirection;
    rdVector3 vecDirectionNextAttach;
    float unknown9;
    float unknown10;
    rdVector3 vecUnknown11;
    float unknown14;
} SithQuetzAttachInfo;

typedef struct sSithQuetzUserBlock
{
    SithQuetzAttachInfo aAttachInfos[26];
    unsigned int numAttachInfos;
    int unknown391;
    int bPosFudged;
    float unknown393;
    SithQuetzStrike strike;
    int unknown488;
    int unknown489;
    int unknown490;
    int unknown491;
    int unknown492;
    int unknown493;
    int unknown494;
    int unknown495;
    int unknown496;
    int unknown497;
    int unknown498;
    int unknown499;
    int unknown500;
    int unknown501;
    int unknown502;
    int unknown503;
    int unknown504;
    int unknown505;
    int unknown506;
    int unknown507;
    int unknown508;
    int unknown509;
    int unknown510;
    int unknown511;
    int unknown512;
    int unknown513;
    int unknown514;
    int unknown515;
    int unknown516;
    int unknown517;
    int unknown518;
    int unknown519;
    int unknown520;
    int unknown521;
    int unknown522;
    int unknown523;
    int unknown524;
    int unknown525;
    int unknown526;
    int unknown527;
    int unknown528;
    int unknown529;
    int unknown530;
    int unknown531;
    int unknown532;
    int unknown533;
    int unknown534;
    int unknown535;
} SithQuetzUserBlock;

typedef struct sSithVehicleEngineFxState
{
    float secUpdateInterval;
    float secUpdateTimer;
} SithVehicleEngineFxState;

typedef struct sSithVehicleExhaustInfo
{
    int bEnabled;
    float moveLength;
    float offsetY;
    float offsetZ;
    float offsetX;
    float velocity;
    float velScale;
    float smokeLifeScale;
    float startMinSize;
    float startMaxSize;
    float startSizeScale;
    float endMinSize;
    float endMaxSize;
    float endSizeScale;
    float dirX;
    float scatterX;
    float dirZ;
    float scatterZ;
    char aExhaustTemplate[64];
} SithVehicleExhaustInfo;

typedef struct sSithJeepUserBlock
{
    int type;
    SithVehicleExhaustInfo exhaustInfo;
    int unknown35;
    int unknown36;
    int unknown37;
    int unknown38;
    int unknown39;
    int unknown40;
    int unknown41;
    int unknown42;
    int unknown43;
    int unknown44;
    int unknown45;
    int unknown46;
    int unknown47;
    int unknown48;
    int unknown49;
    int unknown50;
    int unknown51;
    int unknown52;
    int unknown53;
    int unknown54;
    int unknown55;
    int unknown56;
    int unknown57;
    int unknown58;
    int unknown59;
    int unknown60;
    int unknown61;
    int unknown62;
    int unknown63;
    int unknown64;
    int unknown65;
    int unknown66;
    int unknown67;
    int unknown68;
    int unknown69;
    int unknown70;
    int unknown71;
    int unknown72;
    int unknown73;
    int unknown74;
    int unknown75;
    int unknown76;
    int unknown77;
    int unknown78;
    int unknown79;
    int unknown80;
    int unknown81;
    int unknown82;
    int unknown83;
    int unknown84;
    int unknown85;
    int unknown86;
    int unknown87;
    int unknown88;
    int unknown89;
    int unknown90;
    int unknown91;
    int unknown92;
    int unknown93;
    int unknown94;
    int unknown95;
    int unknown96;
    int unknown97;
    int unknown98;
    int unknown99;
    int unknown100;
    int unknown101;
    int unknown102;
    int unknown103;
    int unknown104;
    int unknown105;
    int unknown106;
    int unknown107;
    int unknown108;
    int unknown109;
    int unknown110;
    int unknown111;
    int unknown112;
    int unknown113;
    int unknown114;
    int unknown115;
    int unknown116;
    int unknown117;
    int unknown118;
    int unknown119;
    int unknown120;
    int unknown121;
    int unknown122;
    int unknown123;
    int unknown124;
    int unknown125;
    int unknown126;
    int unknown127;
    int unknown128;
    int unknown129;
    int unknown130;
    int unknown131;
    int unknown132;
    int unknown133;
    int unknown134;
    int unknown135;
    int unknown136;
    int unknown137;
    int unknown138;
    int unknown139;
    int unknown140;
    int unknown141;
    int unknown142;
    int unknown143;
    int unknown144;
    int unknown145;
    int unknown146;
    int unknown147;
    int unknown148;
    int unknown149;
    int unknown150;
    int unknown151;
    int unknown152;
    int unknown153;
    int unknown154;
    int unknown155;
    int unknown156;
    int unknown157;
    int unknown158;
    int unknown159;
    int unknown160;
    int unknown161;
    int unknown162;
    int unknown163;
    int unknown164;
    int unknown165;
    int unknown166;
    int unknown167;
    int unknown168;
    int unknown169;
    int unknown170;
    int unknown171;
    int unknown172;
    int unknown173;
    int unknown174;
    int unknown175;
    int unknown176;
    SithVehicleEngineFxState fxstate;
} SithJeepUserBlock;

typedef struct sSithVehicleChassisInfo
{
    int numNodes;
    char aWheelMeshNames[4][64];
    int aWheelNodeNums[4];
    float wheelRadius;
} SithVehicleChassisInfo;

struct sSithSurfaceAdjoin
{
    SithSurfaceAdjoinFlag flags;
    SithSector* pAdjoinSector;
    SithSurface* pAdjoinSurface;
    SithSurfaceAdjoin* pMirrorAdjoin;
    SithSurfaceAdjoin* pNextAdjoin;
    SithSurfaceAdjoin* pNextVisibleAdjoin;
    float distance;
};

struct sSithSurface
{
    size_t renderTick;
    SithSector* pSector;
    SithSurfaceAdjoin* pAdjoin;
    SithSurfaceFlag flags;
    rdFace face;
    rdVector4* aIntensities;
    uint32_t msecLastTouched;
};
static_assert(sizeof(SithSurface) == 96, "sizeof(SithSurface) == 96");

typedef struct sSithSectorLight
{
    rdVector3 pos;
    rdVector4 color;
    float minRadius;
    float maxRadius;
} SithSectorLight;
static_assert(sizeof(SithSectorLight) == 36, "sizeof(SithSectorLight) == 36");

struct sSithSector
{
    SithSectorFlag flags;
    rdVector4 ambientLight;
    rdVector4 extraLight;
    rdVector3 tint;
    size_t numVertices;
    int* aVertIdxs;
    size_t numSurfaces;
    SithSurface* pFirstSurface;
    SithSurfaceAdjoin* pFirstAdjoin;
    SithThing* pFirstThingInSector;
    rdVector3 center;
    rdVector3 thrust;
    tSoundHandle hAmbientSound;
    float ambientSoundVolume;
    rdBox3 collideBox;
    rdBox3 boundBox;
    float radius;
    size_t renderTick;
    int bBuildingSector;
    rdClipFrustum* pClipFrustum;
    int pvsIdx;
    SithSectorLight light;
};
static_assert(sizeof(SithSector) == 208, "sizeof(SithSector) == 208");

typedef struct sSithAnimationSlot
{
    int animID;
    SithAnimateFlags flags;
    SithThing* pThing;
    SithThing* pItemThing;
    uint32_t thingSignature;
    rdMaterial* pMaterial;
    SithSurface* pSurface;
    SithSector* pSector;
    rdVector2 direction2;
    rdVector3 direction3;
    rdVector3 thingEndPosition;
    uint32_t msecNextFrameTime;
    uint32_t msecPerFrame;
    size_t curFrame;
    int trackNum;
    float curValue;
    float endValue;
    float secTimeRemaining;
    float deltaValue;
    int unknown24;
    rdVector4 startVector;
    rdVector4 curVector;
    rdVector4 endVector;
    rdVector4 deltaVector;
    int unknown41;
} SithAnimationSlot;
static_assert(sizeof(SithAnimationSlot) == 168, "sizeof(SithAnimationSlot) == 168");

typedef struct sSithMineCarState
{
    int maybeMoveSate;
    int unknown1;
    float surfDrag;
    SithAnimationSlot* pEngineAnim;
    int unknown4;
    int bUpdateLeftSparks;
    int bUpdateRightSparks;
    float secTimeLeftSparks;
    float secTimeRightSparks;
    float unknown9;
    float unknown10;
    int bUpdateSparks;
} SithMineCarState;

typedef struct sSithMineCarFxState
{
    SithVehicleEngineFxState engine;
    float railClackState;
    float railClackDistance;
} SithMineCarFxState;

typedef struct sSithMineCarUserBlock
{
    SithMineCarType type;
    SithVehicleExhaustInfo exhaustInfo;
    SithVehicleChassisInfo chassisInfo;
    SithMineCarState state;
    SithMineCarFxState fxstate;
} SithMineCarUserBlock;

typedef struct sSithFairyDustUserBlock
{
    size_t numUsedDusts;
    SithThing* aDusts[4];
    int bCreateNormalFairyDust;
} SithFairyDustUserBlock;
static_assert(sizeof(SithFairyDustUserBlock) == 24, "sizeof(SithFairyDustUserBlock) == 24");


typedef union sSithUserBlockUnion
{
    SithMineCarUserBlock* pMinecar;
    SithJeepUserBlock* pJeep;
    SithQuetzUserBlock* pQuetz;
    SithFairyDustUserBlock* pFairydust;
} SithUserBlockUnion;

typedef struct sSithExplosionInfo
{
    SithExplosionFlag flags;
    rdVector3 spriteStart;
    rdVector3 spriteEnd;
    unsigned int msecLifeLeft;
    unsigned int msecExpandTime;
    unsigned int msecFadeTime;
    float range;
    float force;
    unsigned int msecBlastTime;
    unsigned int msecBabyTime;
    float maxLight;
    int unknown14;
    float damage;
    SithDamageType damageType;
    rdRGB flashColor;
    char aSpriteTemplateName[64];
    SithThing* pSprite;
    SithThing* apDebries[16];
    rdMaterial* pHitSurfaceMat;
    int unknown21;
    int unknown22;
    int unknown23;
    int unknown24;
    int unknown25;
} SithExplosionInfo;

typedef struct sSithWeaponInfo
{
    SithWeaponFlag flags;
    SithDamageType damageType;
    float damage;
    SithThing* pExplosionTemplate;
    size_t numRicochets;
    float rate;
    float minDamage;
    int unknown6;
    float range;
    float force;
    float unknown7;
    float unknown8;
} SithWeaponInfo;
static_assert(sizeof(SithWeaponInfo) == 48, "sizeof(SithWeaponInfo) == 48");

typedef struct sSithParticleInfo
{
    SithParticleFlag flags;
    size_t numParticles;
    rdMaterial* pMaterial;
    float size;
    float growthSpeed;
    float minRadius;
    float maxRadius;
    float pitchRange;
    float yawRange;
    float timeoutRate;
    float curGrowthSize;
    float secElapsed;
} SithParticleInfo;
static_assert(sizeof(SithParticleInfo) == 48, "sizeof(SithParticleInfo) == 48");

typedef union sSithActorEndurance
{
    unsigned int msecUnderwater;
    unsigned int raftLeakDamage;
} SithActorEndurance;

typedef struct sVGradiantColor
{
    rdVector4 top;
    rdVector4 middle;
    rdVector4 bottomLeft;
    rdVector4 bottomRight;
} VGradiantColor;

typedef struct sSithActorVoiceHeadModelInfo
{
    int headMeshNum;
    int headSwapRefNum;
    rdModel3* apSoundHeadModels[4];
} SithActorVoiceHeadModelInfo;

typedef struct sSithActorVoiceInfo
{
    VGradiantColor voiceColor;
    tSoundChannelHandle hSndChannel;
    SithActorVoiceHeadModelInfo voiceHeadInfo;
} SithActorVoiceInfo;

typedef struct sSithInventoryItem
{
    float amount;
    SithInventoryItemStatus status;
} SithInventoryItem;

typedef struct sSithPlayer
{
    wchar_t awName[64];
    SithPlayerFlag flags;
    DPID playerNetId;
    SithInventoryItem aItems[SITHINVENTORY_MAXTYPES];
    int curItemID;
    int curWeaponID;
    int lastPistolID;
    int lastRifleID;
    int unknown438;
    SithThing* pThing;
    rdMatrix34 orient;
    SithSector* pInSector;
    int respawnMask;
    unsigned int msecLastCommTime;
} SithPlayer;
static_assert(sizeof(SithPlayer) == 1820, "sizeof(SithPlayer) == 1820");

typedef struct sSithActorInfo
{
    SithActorFlag flags;
    float health;
    float maxHealth;
    SithActorEndurance endurance;
    float jumpSpeed;
    float extraSpeed;
    float maxThrust;
    float maxRotVelocity;
    SithThing* pWeaponTemplate;
    SithThing* pExplodeTemplate;
    rdVector3 headPYR;
    rdVector3 eyeOffset;
    float minHeadPitch;
    float maxHeadPitch;
    float maxHeadYaw;
    float maxHeadVelocity;
    rdVector3 fireOffset;
    rdVector3 lightOffset;
    rdVector4 headLightIntensity;
    int unknown30;
    int unknown31;
    SithThing* pThingMeshAttached;
    int attachMeshNum;
    int bForceMovePlay;
    int bControlsDisabled;
    SithPlayer* pPlayer;
    float secWeaponActivationStartTime;
    float secTimeLastRapidFired;
    float secWeaponActivationWaitEndTime;
    float secWeaponActivationWaitTime;
    float secAimWaitEndTime;
    float secWeaponSwapTime;
    int selectedWeaponID;
    int curWeaponID;
    int deselectedWeaponID;
    int weaponSwapRefNum;
    rdVector3 vecUnknown0;
    SithActorVoiceInfo voiceInfo;
} SithActorInfo;
static_assert(sizeof(SithActorInfo) == 292, "sizeof(SithActorInfo) == 292");

typedef struct sSithSpriteInfo
{
    SithThing* pThingMeshAttached;
    int attachMeshNum;
    float width;
    float height;
    float alpha;
    float rollAngle;
    int unknown6;
    int unknown7;
    int unknown8;
    int unknown9;
    int unknown10;
    int unknown11;
    int unknown12;
    int unknown13;
    int unknown14;
    int unknown15;
    int unknown16;
    int unknown17;
    int unknown18;
    int unknown19;
    int unknown20;
    int unknown21;
    int unknown22;
    int unknown23;
    int unknown24;
    int unknown25;
    int unknown26;
    int unknown27;
    int unknown28;
    SithSector* pUnknownSector;
    int unknown30;
    int unknown31;
    int unknown32;
    int unknown33;
    int unknown34;
    int unknown35;
    int unknown36;
    int unknown37;
    int unknown38;
    int unknown39;
    rdMatrix34 orient;
    int unknown52;
    int unknown53;
    int unknown54;
    int unknown55;
    int unknown56;
    int unknown57;
    rdThing rdThing;
} SithSpriteInfo;

typedef struct sSithBackpackItem
{
    int typeId;
    SithInventoryItem* pItem;
} SithBackpackItem;

typedef struct sSithItemInfo
{
    SithItemFlag flags;
    rdVector3 pos;
    SithSector* pInSector;
    float secRespawnInterval;
    unsigned int msecLastTouchTime;
    size_t numItems;
    SithBackpackItem aBackpackItems[32];
} SithItemInfo;
static_assert(sizeof(SithItemInfo) == 288, "sizeof(SithItemInfo) == 288");

typedef union sSithThingInfo
{
    SithActorInfo actorInfo;
    SithWeaponInfo weaponInfo;
    SithItemInfo itemInfo;
    SithExplosionInfo explosionInfo;
    SithSpriteInfo spriteInfo;
    SithParticleInfo particleInfo;
} SithThingInfo;

typedef struct sSithCogCallstackElement
{
    int execPos;
    SithCogStatus execStatus;
    int statusParam;
    SithCogMsgType execMsgType;
} SithCogCallstackElement;

typedef struct sSithCogScriptMsgHandler
{
    SithCogMsgType type;
    int32_t codeOffset; // Can be < 0
    uint32_t label;
} SithCogScriptMsgHandler;

typedef struct sSithCogSymbolRef
{
    SithCogSymbolRefType type;
    int bLocal;
    int linkId;
    int mask;
    size_t symbolId;
    char* pDescription;
    char aValue[64];
} SithCogSymbolRef;
static_assert(sizeof(SithCogSymbolRef) == 88, "sizeof(SithCogSymbolRef) == 88");

typedef struct sSithCogScript
{
    SithCogFlag flags;
    char aName[64];
    int32_t* pCode;
    size_t codeSize;
    SithCogSymbolTable* pSymbolTable;
    size_t numHandlers;
    SithCogScriptMsgHandler aHandlers[32];
    SithCogSymbolRef aSymRefs[SITHCOGSCRIPT_MAXSYMREFS];
    size_t numSymbolRefs;
} SithCogScript;
static_assert(sizeof(SithCogScript) == 23000, "sizeof(SithCogScript) == 23000");

struct sSithCog
{
    SithCogScript* pScript;
    SithCogFlag flags;
    int idx;
    SithCogStatus status;
    size_t execPos;
    int statusParams[2];
    uint32_t msecPulseInterval;
    uint32_t msecNextPulseTime;
    uint32_t msecTimerTimeout;
    int linkId;
    int senderIdx;
    SithCogSymbolRefType senderType;
    int sourceIdx;
    SithCogSymbolRefType sourceType;
    SithCogMsgType execMsgType;
    int params[4];
    int returnValue;
    SithCogCallstackElement callstack[SITHCOGEXEC_CALLSTACKSIZE];
    size_t callDepth;
    SithCogSymbolTable* pSymbolTable;
    SithCogSymbolValue stack[SITHCOGEXEC_STACKSIZE];
    size_t stackSize;
    char aName[64];
    char aSymRefValues[SITHCOGSCRIPT_MAXSYMREFS][64];
    SithCogSymbolValue* aHeap;
    size_t heapSize;
};
static_assert(sizeof(SithCog) == 20712, "sizeof(SithCog) == 20712");

typedef union sSithAttachStructure
{
    SithThing* pThingAttached;
    SithSurface* pSurfaceAttached;
} SithAttachStructure;

typedef struct sSithAttach
{
    SithAttachFlag flags;
    rdVector3 attachedFaceFirstVert;
    rdFace* pFace;
    float someAttachDistance;
    rdVector3 vecUnknownMaybeLocalPositionOnTheAttachedThing;
    SithAttachStructure attachedToStructure;
} SithAttach;
static_assert(sizeof(SithAttach) == 40, "sizeof(SithAttach) == 40");

typedef struct sSithAIControlInfo
{
    SithAIClass* pClass;
    SithAIControlBlock* pLocal;
} SithAIControlInfo;
static_assert(sizeof(SithAIControlInfo) == 8, "sizeof(SithAIControlInfo) == 8");

typedef union sSithControlInfo
{
    SithAIControlInfo aiControl;
} SithControlInfo;

struct sSithSoundClassEntry
{
    tSoundHandle hSnd;
    SoundPlayFlag playflags;
    float maxVolume;
    float minRadius;
    float maxRadius;
    size_t numEntries;
    SithSoundClassEntry* pNextMode;
};
static_assert(sizeof(SithSoundClassEntry) == 28, "sizeof(SithSoundClassEntry) == 28");

typedef struct sSithSoundClass
{
    char aName[64];
    SithSoundClassEntry* aEntries[SITHSOUNDCLASS_MAXMODES];
} SithSoundClass;
static_assert(sizeof(SithSoundClass) == 628, "sizeof(SithSoundClass) == 628");

typedef struct sSithPuppetClassSubmode
{
    rdKeyframe* pKeyframe;
    rdKeyframeFlags flags;
    int lowPriority;
    int highPriority;
} SithPuppetClassSubmode;

typedef struct sSithPuppetClass
{
    char aName[64];
    SithPuppetClassSubmode aModes[SITH_PUPPET_NUMMOVEMODES * SITH_PUPPET_NUMARMEDMODES][SITH_PUPPET_NUMSUBMODES];
    int aJoints[10];
} SithPuppetClass;
static_assert(sizeof(SithPuppetClass) == 32360, "sizeof(SithPuppetClass) == 32360");

typedef struct sSithPathFrame
{
    rdVector3 pos;
    rdVector3 pyr;
} SithPathFrame;

typedef struct sSithPathMoveInfo
{
    size_t sizeFrames;
    size_t numFrames;
    SithPathFrame* aFrames;
    SithPathMoveMode mode;
    rdVector3 vecDeltaPos;
    float moveTimeRemaining;
    float moveVel;
    rdMatrix34 curOrient;
    float rotDeltaTime;
    rdVector3 rotOffset;
    rdVector3 goalPYR;
    rdVector3 rotateToPYR;
    float rotDelta;
    size_t numBlockedMoves;
    int currentFrame; // can be -1
    size_t nextFrame;
    size_t goalFrame;
} SithPathMoveInfo;
static_assert(sizeof(SithPathMoveInfo) == 144, "sizeof(SithPathMoveInfo) == 144");

typedef struct sSithPhysicsInfo
{
    SithPhysicsFlags flags;
    rdVector3 velocity;
    rdVector3 angularVelocity;
    rdVector3 thrust;
    rdVector3 rotThrust;
    float mass;
    float height;
    float airDrag;
    float surfDrag;
    float staticDrag;
    float maxRotationVelocity;
    float maxVelocity;
    float orientSpeed;
    float buoyancy;
    rdVector3 gravityForce;
    rdVector3 deltaVelocity;
    float physicsRolloverFrames;
} SithPhysicsInfo;
static_assert(sizeof(SithPhysicsInfo) == 116, "sizeof(SithPhysicsInfo) == 116");

typedef union sSithMoveInfo
{
    SithPathMoveInfo pathMovement;
    SithPhysicsInfo physics;
} SithMoveInfo;

typedef struct sSithThingLight
{
    rdVector4 color;
    rdVector4 emitColor;
    float minRadius;
    float maxRadius;
} SithThingLight;
static_assert(sizeof(SithThingLight) == 40, "sizeof(SithThingLight) == 40");

struct sSithPuppetTrack
{
    SithPuppetClassSubmode* pSubmode;
    int trackNum;
    SithPuppetSubMode submode;
    SithPuppetTrack* pNextTrack;
};
static_assert(sizeof(SithPuppetTrack) == 16, "sizeof(SithPuppetTrack) == 16");

typedef struct sSithPuppetState
{
    int armedMode;
    SithPuppetMoveMode moveMode;
    int majorMode;
    SithPuppetSubMode submode;
    SithPuppetTrack* pFirstTrack;
    uint32_t msecLastFidgetStillMoveTime;
} SithPuppetState;

struct sSithThing
{
    SithThingFlag flags;
    int idx;
    int guid;
    SithThingType type;
    SithThingMoveType moveType;
    SithControlType controlType;
    SithThingMoveStatus moveStatus;
    int unknown1;
    uint32_t msecLifeLeft;
    uint32_t msecTimerTime;
    uint32_t msecNextPulseTime;
    uint32_t msecPulseInterval;
    SithCollide collide;
    SithAttach attach;
    SithSector* pInSector;
    SithThing* pNextThingInSector;
    SithThing* pPrevThingInSector;
    SithThing* pAttachedThing;
    SithThing* pNextAttachedThing;
    SithThing* pPrevAttachedThing;
    uint32_t signature;
    const SithThing* pTemplate;
    SithThing* pCreateThingTemplate;
    SithThing* pParent;
    uint32_t parentSignature;
    rdMatrix34 orient;
    rdVector3 pos;
    rdVector3 forceMoveStartPos;
    rdThing renderData;
    rdVector3 transformedPos;
    SithThingLight light;
    size_t renderFrame;
    SithSoundClass* pSoundClass;
    SithPuppetClass* pPuppetClass;
    SithPuppetState* pPuppetState;
    SithThingInfo thingInfo;
    int aiState;
    int aiArmedModeState;
    SithMoveInfo moveInfo;
    int moveFrame;
    float distanceMoved;
    rdVector3 moveDir;
    SithControlInfo controlInfo;
    char aName[64];
    SithCog* pCog;
    SithCog* pCaptureCog;
    int gap295;
    int unknownFlags;
    float alpha;
    float userval;
    uint32_t numSwapEntries;
    SithThingSwapEntry* pSwapList;
    int perfLevel;
    SithUserBlockUnion userblock;
};
static_assert(sizeof(SithThing) == 928, "sizeof(SithThing) == 928");

struct sSithAIControlBlock
{
    SithThing* pOwner;
    SithAIClass* pClass;
    SithAIMode mode;
    SithAISubMode submode;
    SithAIInstinctState aInstinctStates[SITHAI_MAXINSTINCTS];
    size_t numInstincts;
    uint32_t msecNextUpdate;
    rdVector3 goalLVec;
    rdVector3 lookPos;
    rdVector3 movePos;
    rdVector3 moveDirection;
    float moveDistance;
    float moveSpeed;
    SithThing* pFleeFromThing;
    rdVector3 alertPos;
    SithThing* pTargetThing;
    rdVector3 targetPos;
    int unknown124;
    rdVector3 toTarget;
    float distance;
    int targetSightState;
    rdVector3 vecUnknown122;
    uint32_t msecAttackStart;
    rdVector3 weaponFirePos;
    SithThing* goalThing;
    rdVector3 vecUnknown6;
    int unknown141;
    rdVector3 vecUnknown0;
    float targetDistance;
    int targetSightState2;
    rdVector3 vecUnknown5;
    int unknown150;
    rdVector3 homePos;
    rdVector3 homeOrient;
    float aimError;
    SithAIUtilFireFlags fireFlags;
    int fireWeaponNum;
    float fireDot;
    float minFireDist;
    float maxFireDist;
    int aMoods[3];
    int unknown166;
    int unknown167;
    int unknown168;
    uint32_t msecFireWaitTime;
    uint32_t msecPauseMoveUntil;
    rdVector3* aFrames;
    size_t numFrames;
    size_t sizeFrames;
    int allowedSurfaceTypes;
    rdVector3 vecUnknown3;
    rdVector3 vecUnknown;
    float maxHomeDist;
};
static_assert(sizeof(SithAIControlBlock) == 728, "sizeof(SithAIControlBlock) == 728");

struct sSithMessage
{
    unsigned int msecTime;
    unsigned int length;
    uint16_t type;
    uint8_t data[3072];
};
static_assert(sizeof(SithMessage) == 3084, "sizeof(SithMessage) == 3084");

typedef struct sSithWorldFog
{
    int bEnabled;
    rdVector4 color;
    float startDepth;
    float endDepth;
} SithWorldFog;
static_assert(sizeof(SithWorldFog) == 28, "sizeof(SithWorldFog) == 28");

struct sSithWorld
{
    char aCopyright[1216];
    char aName[64];
    SithWorldState state;
    int version;
    float gravity;
    float ceilingSkyHeight;
    float horizonDistance;
    rdVector2 horizonSkyOffset;
    rdVector2 ceilingSkyOffset;
    float distancesLOD[4];
    SithWorldFog fog;
    size_t numSounds;
    size_t numMaterials;
    size_t sizeMaterials;
    rdMaterial* aMaterials;
    rdMaterial** apMatArray;
    size_t numVertices;
    rdVector3* aVertices;
    rdVector3* aTransformedVertices;
    uint32_t* aVertexRenderTickIds;
    size_t numTexVertices;
    rdVector2* aTexVerticies;
    rdVector4* aVertDynamicLights;
    uint32_t* aVertDynamicLightsRenderTicks;
    size_t numAdjoins;
    SithSurfaceAdjoin* aAdjoins;
    size_t numSurfaces;
    SithSurface* aSurfaces;
    size_t numSectors;
    SithSector* aSectors;
    size_t numAIClasses;
    size_t sizeAIClasses;
    SithAIClass* aAIClasses;
    size_t numModels;
    size_t sizeModels;
    rdModel3* aModels;
    size_t numSprites;
    size_t sizeSprites;
    rdSprite3* aSprites;
    size_t numKeyframes;
    size_t sizeKeyframes;
    rdKeyframe* aKeyframes;
    size_t numPuppetClasses;
    size_t sizePuppetClasses;
    SithPuppetClass* aPuppetClasses;
    size_t numSoundClasses;
    size_t sizeSoundClasses;
    SithSoundClass* aSoundClasses;
    size_t numCogScripts;
    size_t sizeCogScripts;
    SithCogScript* aCogScripts;
    size_t numCogs;
    size_t sizeCogs;
    SithCog* aCogs;
    size_t numThingTemplates;
    size_t sizeThingTemplates;
    SithThing* aThingTemplates;
    size_t numThings;
    int lastThingIdx;
    SithThing* aThings;
    size_t sizePVS;
    uint8_t* aPVS;
    size_t numParticles;
    size_t sizeParticles;
    rdParticle* aParticles;
    SithThing* pCameraFocusThing;
    SithThing* pLocalPlayer;
    int unknown;
};
static_assert(sizeof(SithWorld) == 1588, "sizeof(SithWorld) == 1588");

typedef struct sCndMaterialInfo
{
    char aName[64];
    uint32_t width;
    uint32_t height;
    uint32_t numCels;
    uint32_t numMipLevels;
    ColorInfo colorInfo;
} CndMaterialInfo;
static_assert(sizeof(CndMaterialInfo) == 136, "sizeof(CndMaterialInfo) == 136");

typedef struct sCndAdjoin
{
    int flags;
    int mirror;
    float distance;
} CndAdjoin;
static_assert(sizeof(CndAdjoin) == 12, "sizeof(CndAdjoin) == 12");

typedef struct sCndSurfaceInfo
{
    int32_t matNum;
    int32_t surfflags;
    int32_t faceflags;
    rdGeometryMode geoMode;
    rdLightMode lightMode;
    int32_t adjoinNum;
    rdVector4 color;
    rdVector3 normal;
    uint32_t numVerts;
} CndSurfaceInfo;
static_assert(sizeof(CndSurfaceInfo) == 56, "sizeof(CndSurfaceInfo) == 56");

struct sSithCogSyntaxNode
{
    uint32_t parentLabel;
    uint32_t childLabel;
    SithCogSyntaxNode* pLeft;
    SithCogSyntaxNode* pRight;
    int32_t opcode;
    int value;
    rdVector3 vecValue;
};
static_assert(sizeof(SithCogSyntaxNode) == 36, "sizeof(SithCogSyntaxNode) == 36");

typedef struct sSithCogThingLink
{
    SithThing* pThing;
    uint32_t thingSignature;
    SithCog* pCog;
    int linkId;
    int mask;
} SithCogThingLink;
static_assert(sizeof(SithCogThingLink) == 20, "sizeof(SithCogThingLink) == 20");

typedef struct sSithCogSectorLink
{
    SithSector* pSector;
    SithCog* pCog;
    int linkId;
    int mask;
} SithCogSectorLink;

typedef struct sSithCogSurfaceLink
{
    SithSurface* pSurface;
    SithCog* pCog;
    int linkId;
    int mask;
} SithCogSurfaceLink;

struct sSithCollision
{
    SithCollisionType type;
    SithThing* pThingCollided;
    SithSurface* pSurfaceCollided;
    rdFace* pFaceCollided;
    rdModel3Mesh* pMeshCollided;
    rdVector3 hitNorm;
    float distance;
    int bEnumerated;
};

typedef struct sCndThingLight
{
    rdVector4 color;
    rdVector4 emitColor;
} CndThingLight;

typedef struct sCndThingInfo
{
    char aBaseTemplateName[64];
    char aName[64];
    rdVector3 pos;
    rdVector3 pyr;
    int unknown6;
    int sectorNum;
    SithThingType type;
    SithThingFlag flags;
    SithThingMoveType moveType;
    SithControlType controlType;
    CndThingLight light;
    uint32_t msecLifeLeft;
    rdThingType rdThingType;
    char aRdFilename[64];
    char aPupFilename[64];
    char aSndFilename[64];
    char aCreateThingTemplateName[64];
    char aCogFilename[64];
    SithCollide collide;
    int perfLevel;
} CndThingInfo;

typedef struct sSithCamera
{
    SithCameraType type;
    uint32_t unknown1;
    float fov;
    float aspectRatio;
    SithThing* pPrimaryFocusThing;
    SithThing* pSecondaryFocusThing;
    SithSector* pSector;
    rdVector3 offset;
    rdVector3 vecUnknown1;
    rdMatrix34 orient;
    rdVector3 lookPos;
    rdVector3 lookPYR;
    rdCamera rdCamera;
    int posInterpState;
    int lookInterpState;
    int focusInterpState;
    rdVector3 curLookInterp;
    rdVector3 pos;
    rdVector3 focusPos;
    float secLookInterpDeltaTime;
    float secPosInterpDeltaTime;
    float secFocusInterpDeltaTime;
    int bPosInterp;
    int bLookInterp;
    float interpSpeed;
} SithCamera;
static_assert(sizeof(SithCamera) == 2364, "sizeof(SithCamera) == 2364");

typedef struct sSithInventoryType
{
    SithInventoryTypeFlag flags;
    char aName[128];
    float min;
    float max;
    SithCog* pCog;
    rdModel3* pModel;
    rdModel3* pInvIconModel;
    rdModel3* pHolsterModel;
} SithInventoryType;

typedef struct sCndPhysicsInfo
{
    SithPhysicsFlags flags;
    float mass;
    float height;
    float airDrag;
    float surfaceDrag;
    float staticDrag;
    rdVector3 angularVelocity;
    rdVector3 velocity;
    float maxRotationVelocity;
    float maxVelocity;
    float orientSpeed;
    float buoyancy;
} CndPhysicsInfo;

typedef struct sCndActorInfo
{
    SithActorFlag flags;
    char aWeaponTemplateName[64];
    float health;
    float maxHealth;
    float maxThrust;
    float maxRotVelocity;
    float maxHeadVelocity;
    float maxHeadYaw;
    float jumpSpeed;
    rdVector3 eyeOffset;
    float minHeadPitch;
    float maxHeadPitch;
    rdVector3 fireOffset;
    rdVector3 lightOffset;
    rdVector4 headLightColor;
    VGradiantColor voiceColor;
    char aExplodeTemplateName[64];
} CndActorInfo;

typedef struct sCndWeaponInfo
{
    SithWeaponFlag flags;
    char aExplosionTemplateName[64];
    float damage;
    float minDamage;
    float rate;
    SithDamageType damageType;
    float range;
    float force;
} CndWeaponInfo;

typedef struct sCndExplosionInfo
{
    SithExplosionFlag flags;
    float damage;
    SithDamageType damageType;
    float range;
    float force;
    uint32_t msecBlastTime;
    uint32_t msecBabyTime;
    uint32_t msecExpandTime;
    uint32_t msecFadeTime;
    float maxLight;
    char aDebrisTemplateNames[16][64];
    rdVector3 spriteStartPos;
    rdVector3 spriteEndPos;
    char aSpriteTemplateName[64];
} CndExplosionInfo;

typedef struct sCndItemInfo
{
    SithItemFlag flags;
    float secRespawnInterval;
} CndItemInfo;

typedef struct sCndParticleInfo
{
    SithParticleFlag flags;
    float growthSpeed;
    float minRadius;
    float maxRadius;
    float size;
    float timeoutRate;
    int numParticles;
    float pitchRange;
    float yawRange;
    char aMaterialName[64];
} CndParticleInfo;

typedef struct sSithCollideResult
{
    CollisionHandlerThing pProcessFunc;
    int (J3DAPI* pUnknownFunc)(SithThing*, SithThing*);
    int bDifferentTypHandler;
} SithCollideResult;

typedef struct sSithAIAwarenessEvent
{
    SithSector* pSector;
    SithThing* pThing;
    rdVector3 pos;
    int type;
    float levelAtTransmittingPos;
} SithAIAwarenessEvent;

typedef struct sSithVoiceSubtitleInfo
{
    char aSubtitleText[256];
    rdVector4 aTextColors[4];
    char aSoundFileName[256];
    unsigned int msecStartTime;
    unsigned int msecEndTime;
    unsigned int msecShowEndTime;
} SithVoiceSubtitleInfo;
static_assert(sizeof(SithVoiceSubtitleInfo) == 588, "sizeof(SithVoiceSubtitleInfo) == 588");

typedef struct sSithWorldTextSectionParseHandler
{
    char aName[64];
    SithWorldTextSectionParseFunc pfHandler;
} SithWorldTextSectionParseHandler;

typedef struct sSithAIAwarenessSector
{
    size_t processID;
    float aLevelAtTransmittingPos[4];
    rdVector3 aStartPos[4];
    rdVector3 aEndPos[4];
    SithThing* aTransmittingThing[4];
} SithAIAwarenessSector;
static_assert(sizeof(SithAIAwarenessSector) == 132, "sizeof(sSithAIAwarenessSector) == 132");

struct sSithConsoleCommand
{
    char aName[64];
    SithConsoleFunction pfFunc;
    int flags;
};

typedef struct sSithAIWaypointOwner
{
    int thingNum;
    int waypointNum;
    float cosTurnAlignAngle;
} SithAIWaypointOwner;

typedef struct sSithAIWaypoint
{
    int thingNum;
    int numUsedLinks;
    int aWpntLinks[8];
    SithAIWaypointLayerFlag flags;
    int unknown11;
} SithAIWaypoint;

struct sSithEvent
{
    uint32_t msecEventTime;
    int taskNum;
    SithEventParams params;
    SithEvent* pNextEvent;
};
static_assert(sizeof(SithEvent) == 28, "sizeof(SithEvent) == 28");

typedef struct sCndSectorInfo
{
    SithSectorFlag flags;
    rdVector4 ambientLight;
    rdVector4 extraLight;
    rdVector3 tint;
    SithSectorLight light;
    rdBox3 collideBox;
    rdBox3 boundBox;
    char aAmbientSound[64];
    float ambientSoundVolume;
    rdVector3 center;
    float radius;
    int32_t firstSurfaceIdx;
    int32_t numSurfaces;
    int32_t numVertices;
    int32_t pvsIdx;
    rdVector3 thrust;
} CndSectorInfo;

typedef struct sSithControlBinding
{
    size_t controlId;
    SithControlBindFlag flags;
    float sensitivity;
} SithControlBinding;
static_assert(sizeof(SithControlBinding) == 12, "sizeof(SithControlBinding) == 100");

typedef struct sCndSurfaceAdjoin
{
    int flags;
    int mirrorIdx;
    float distance;
} CndSurfaceAdjoin;

typedef struct sSithMainStartLevelNdsInfo
{
    const char* aName;
    const char* aFilename;
} SithMainStartLevelNdsInfo;

typedef struct sSithQuetzAnimInfo
{
    int unknown0;
    int unknown1;
    int unknown2;
    int unknown3;
    int unknown4;
    int unknown5;
    int unknown6;
    int unknown7;
    int unknown8;
    int unknown9;
    int unknown10;
    int unknown11;
    int unknown12;
    int unknown13;
    int unknown14;
    int unknown15;
    int unknown16;
    int unknown17;
    int unknown18;
    int unknown19;
    int unknown20;
    int unknown21;
    int unknown22;
    int unknown23;
    int unknown24;
    int unknown25;
    int unknown26;
    int unknown27;
    int unknown28;
    int unknown29;
    int unknown30;
    int unknown31;
    int unknown32;
    int unknown33;
    int unknown34;
    int unknown35;
    int unknown36;
    int unknown37;
    int unknown38;
    int unknown39;
    int unknown40;
    int unknown41;
    int unknown42;
    int unknown43;
    int unknown44;
    int unknown45;
    int unknown46;
    int unknown47;
    int unknown48;
    int unknown49;
    int unknown50;
    int unknown51;
    int unknown52;
    int unknown53;
    int unknown54;
    int unknown55;
    int unknown56;
    int unknown57;
    int unknown58;
    int unknown59;
    int unknown60;
    int unknown61;
    int unknown62;
    int unknown63;
    int unknown64;
    int unknown65;
    int unknown66;
    int unknown67;
    int unknown68;
    int unknown69;
    int unknown70;
    int unknown71;
    int unknown72;
    int unknown73;
    int unknown74;
    int unknown75;
    int unknown76;
    int unknown77;
    int unknown78;
    int unknown79;
    int unknown80;
    int unknown81;
    int unknown82;
    int unknown83;
    int unknown84;
    int unknown85;
    int unknown86;
    int unknown87;
    int unknown88;
    int unknown89;
    int unknown90;
    int unknown91;
    int unknown92;
    int unknown93;
} SithQuetzAnimInfo;

typedef struct sSithOverlayMapConfig
{
    size_t numZLevels;
    float* aZLevelBounds;
    D3DCOLOR* aZLevelColors;
    D3DCOLOR playerBoundsColor;
    D3DCOLOR playerDirectionColor;
    D3DCOLOR actorBoundsColor;
    D3DCOLOR actorDirectionColor;
    D3DCOLOR itemBoundsColor;
    D3DCOLOR weaponBoundsColor;
    D3DCOLOR defaultBoundsColor;
    int bMapRotation;
} SithOverlayMapConfig;

typedef struct sCndAIControlInfo
{
    char aFileName[64];
    int numFrames;
} CndAIControlInfo;

typedef struct sSithWorldBinarySectionParser
{
    const char* pName;
    const SithWorldBinarySectionSectionReadFunc pfRead;
    const SithWorldBinarySectionSectionWriteFunc pfWrite;
} SithWorldBinarySectionParser;

typedef struct sCndSurfaceVertInfo
{
    int vertIdx;
    int texIdx;
    rdVector4 color;
} CndSurfaceVertInfo;

typedef struct sSithLevelStatistic
{
    uint32_t elapsedTime;
    size_t numFoundTreasures;
    size_t numSeenHints;
    int difficultyPenalty;
    uint32_t curElapsedSec;
    size_t numIQUpdates;
    int levelStartIQPoints;
    int iqPoints;
} SithLevelStatistic;
static_assert(sizeof(SithLevelStatistic) == 32, "sizeof(SithLevelStatistic) == 42");

typedef struct sSithGameStatistics
{
    int curLevelNum;
    int totalIQPoints;
    int foundTreasureValue;
    int numFoundTreasures;
    SithLevelStatistic aLevelStatistic[17];
    SithLevelStatistic totalLevelStats;
} SithGameStatistics;

typedef struct sNdsHeader
{
    int32_t version;
    char aDate[64];
    char aLevelFilename[128];
    char aPreviousLevelFilename[128];
    uint32_t msecGameTime;
    SithGameStatistics gameStatistics;
    int32_t bThumbnail;
    int32_t perflevel;
    SithCogSymbolValue aCogGlobalValues[16];
    uint32_t localPlayerNum;
} NdsHeader;
static_assert(sizeof(NdsHeader) == 1188, "sizeof(NdsHeader) == 1188");

typedef struct sSithMineCarControlState
{
    float secStoppingElapsedTime;
    int accelerationState;
    float secDuckTime;
    int curDuckPuppetTrackNum;
    int bNotDucked;
    int indyLeanState;
    int curPuppetTrack;
    tSoundChannelHandle hBreakSnd;
    float secBreakingElapsedTime;
    float secUnboardingElapsedTime;
    int unbaordState;
} SithMineCarControlState;

typedef struct sSithRaftControlState
{
    SithThingMoveStatus moveStatus;
    SithPuppetSubMode puppetSubmode;
    rdVector3 exitSurfPos;
    rdVector3 exitSurfPYR;
    float moveSize;
    float velocity;
    int bRowing;
    float secRowStartTime;
    float secUnboardTime;
} SithRaftControlState;

typedef struct sSithMode
{
    int masterMode;
    int subModeFlags;
    SithDebugModeFlag debugModeFlags;
    int difficulty;
    SithMapModeFlags mapModeFlags;
} SithMode;

typedef struct sSithAIWaypointDistance
{
    int num;
    float distance;
} SithAIWaypointDistance;

typedef struct sSithInventoryUnknown
{
    int bEnabled;
    int unknown2;
    int unknown3;
} SithInventoryUnknown;
static_assert(sizeof(SithInventoryUnknown) == 12, "sizeof(SithInventoryUnknown) == 12");

J3D_EXTERN_C_END
#endif //SITH_TYPES_H
